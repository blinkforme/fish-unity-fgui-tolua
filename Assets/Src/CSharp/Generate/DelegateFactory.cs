//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public class DelegateFactory
{
	public delegate Delegate DelegateCreate(LuaFunction func, LuaTable self, bool flag);
	public static Dictionary<Type, DelegateCreate> dict = new Dictionary<Type, DelegateCreate>();
	static DelegateFactory factory = new DelegateFactory();

	public static void Init()
	{
		Register();
	}

	public static void Register()
	{
		dict.Clear();
		dict.Add(typeof(System.Action), factory.System_Action);
		dict.Add(typeof(UnityEngine.Events.UnityAction), factory.UnityEngine_Events_UnityAction);
		dict.Add(typeof(System.Predicate<int>), factory.System_Predicate_int);
		dict.Add(typeof(System.Action<int>), factory.System_Action_int);
		dict.Add(typeof(System.Comparison<int>), factory.System_Comparison_int);
		dict.Add(typeof(System.Func<int,int>), factory.System_Func_int_int);
		dict.Add(typeof(System.Func<UnityEngine.LogType,object,bool>), factory.System_Func_UnityEngine_LogType_object_bool);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<float>), factory.DG_Tweening_Core_DOGetter_float);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<float>), factory.DG_Tweening_Core_DOSetter_float);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<double>), factory.DG_Tweening_Core_DOGetter_double);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<double>), factory.DG_Tweening_Core_DOSetter_double);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<int>), factory.DG_Tweening_Core_DOGetter_int);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<int>), factory.DG_Tweening_Core_DOSetter_int);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<uint>), factory.DG_Tweening_Core_DOGetter_uint);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<uint>), factory.DG_Tweening_Core_DOSetter_uint);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<long>), factory.DG_Tweening_Core_DOGetter_long);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<long>), factory.DG_Tweening_Core_DOSetter_long);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<ulong>), factory.DG_Tweening_Core_DOGetter_ulong);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<ulong>), factory.DG_Tweening_Core_DOSetter_ulong);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<string>), factory.DG_Tweening_Core_DOGetter_string);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<string>), factory.DG_Tweening_Core_DOSetter_string);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector2>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector2>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector3>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector3>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector4>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector4>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Color>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Color);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Color>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Color);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Rect>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Rect>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>), factory.DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>), factory.DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		dict.Add(typeof(DG.Tweening.TweenCallback), factory.DG_Tweening_TweenCallback);
		dict.Add(typeof(DG.Tweening.TweenCallback<int>), factory.DG_Tweening_TweenCallback_int);
		dict.Add(typeof(UnityEngine.Camera.CameraCallback), factory.UnityEngine_Camera_CameraCallback);
		dict.Add(typeof(DG.Tweening.TweenCallback<float>), factory.DG_Tweening_TweenCallback_float);
		dict.Add(typeof(DG.Tweening.EaseFunction), factory.DG_Tweening_EaseFunction);
		dict.Add(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		dict.Add(typeof(UnityEngine.Application.LowMemoryCallback), factory.UnityEngine_Application_LowMemoryCallback);
		dict.Add(typeof(UnityEngine.Application.LogCallback), factory.UnityEngine_Application_LogCallback);
		dict.Add(typeof(System.Action<bool>), factory.System_Action_bool);
		dict.Add(typeof(System.Action<string>), factory.System_Action_string);
		dict.Add(typeof(System.Func<bool>), factory.System_Func_bool);
		dict.Add(typeof(UnityEngine.AudioClip.PCMReaderCallback), factory.UnityEngine_AudioClip_PCMReaderCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		dict.Add(typeof(System.Action<UnityEngine.AsyncOperation>), factory.System_Action_UnityEngine_AsyncOperation);
		dict.Add(typeof(FairyGUI.EventCallback1), factory.FairyGUI_EventCallback1);
		dict.Add(typeof(FairyGUI.EventCallback0), factory.FairyGUI_EventCallback0);
		dict.Add(typeof(FairyGUI.ListItemRenderer), factory.FairyGUI_ListItemRenderer);
		dict.Add(typeof(FairyGUI.ListItemProvider), factory.FairyGUI_ListItemProvider);
		dict.Add(typeof(FairyGUI.PlayCompleteCallback), factory.FairyGUI_PlayCompleteCallback);
		dict.Add(typeof(FairyGUI.TransitionHook), factory.FairyGUI_TransitionHook);
		dict.Add(typeof(FairyGUI.UIPackage.LoadResource), factory.FairyGUI_UIPackage_LoadResource);
		dict.Add(typeof(FairyGUI.UIPackage.LoadResourceAsync), factory.FairyGUI_UIPackage_LoadResourceAsync);
		dict.Add(typeof(FairyGUI.UIPackage.CreateObjectCallback), factory.FairyGUI_UIPackage_CreateObjectCallback);
		dict.Add(typeof(FairyGUI.GObjectPool.InitCallbackDelegate), factory.FairyGUI_GObjectPool_InitCallbackDelegate);
		dict.Add(typeof(FairyGUI.TimerCallback), factory.FairyGUI_TimerCallback);
		dict.Add(typeof(FairyGUI.GTweenCallback), factory.FairyGUI_GTweenCallback);
		dict.Add(typeof(FairyGUI.GTweenCallback1), factory.FairyGUI_GTweenCallback1);
		dict.Add(typeof(FairyGUI.UIObjectFactory.GComponentCreator), factory.FairyGUI_UIObjectFactory_GComponentCreator);
		dict.Add(typeof(FairyGUI.UIObjectFactory.GLoaderCreator), factory.FairyGUI_UIObjectFactory_GLoaderCreator);
		dict.Add(typeof(System.Action<FairyGUI.UpdateContext>), factory.System_Action_FairyGUI_UpdateContext);
		dict.Add(typeof(System.Action<UnityEngine.Texture>), factory.System_Action_UnityEngine_Texture);
		dict.Add(typeof(FairyGUI.UIConfig.SoundLoader), factory.FairyGUI_UIConfig_SoundLoader);
		dict.Add(typeof(BestHTTP.OnUploadProgressDelegate), factory.BestHTTP_OnUploadProgressDelegate);
		dict.Add(typeof(BestHTTP.OnStreamingDataDelegate), factory.BestHTTP_OnStreamingDataDelegate);
		dict.Add(typeof(System.Action<BestHTTP.HTTPRequest,BestHTTP.HTTPResponse>), factory.System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse);
		dict.Add(typeof(BestHTTP.OnDownloadProgressDelegate), factory.BestHTTP_OnDownloadProgressDelegate);
		dict.Add(typeof(BestHTTP.OnRequestFinishedDelegate), factory.BestHTTP_OnRequestFinishedDelegate);
		dict.Add(typeof(System.Func<BestHTTP.HTTPRequest,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,bool>), factory.System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool);
		dict.Add(typeof(BestHTTP.OnBeforeRedirectionDelegate), factory.BestHTTP_OnBeforeRedirectionDelegate);
		dict.Add(typeof(BestHTTP.OnBeforeHeaderSendDelegate), factory.BestHTTP_OnBeforeHeaderSendDelegate);
		dict.Add(typeof(BestHTTP.OnHeaderEnumerationDelegate), factory.BestHTTP_OnHeaderEnumerationDelegate);
		dict.Add(typeof(BestHTTP.WebSocket.OnWebSocketOpenDelegate), factory.BestHTTP_WebSocket_OnWebSocketOpenDelegate);
		dict.Add(typeof(BestHTTP.WebSocket.OnWebSocketMessageDelegate), factory.BestHTTP_WebSocket_OnWebSocketMessageDelegate);
		dict.Add(typeof(BestHTTP.WebSocket.OnWebSocketBinaryDelegate), factory.BestHTTP_WebSocket_OnWebSocketBinaryDelegate);
		dict.Add(typeof(BestHTTP.WebSocket.OnWebSocketClosedDelegate), factory.BestHTTP_WebSocket_OnWebSocketClosedDelegate);
		dict.Add(typeof(BestHTTP.WebSocket.OnWebSocketErrorDelegate), factory.BestHTTP_WebSocket_OnWebSocketErrorDelegate);
		dict.Add(typeof(BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate), factory.BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate);
		dict.Add(typeof(System.Action<BestHTTP.WebSocket.WebSocketResponse,string>), factory.System_Action_BestHTTP_WebSocket_WebSocketResponse_string);
		dict.Add(typeof(System.Action<BestHTTP.WebSocket.WebSocketResponse,byte[]>), factory.System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes);
		dict.Add(typeof(System.Action<BestHTTP.WebSocket.WebSocketResponse,BestHTTP.WebSocket.Frames.WebSocketFrameReader>), factory.System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader);
		dict.Add(typeof(System.Action<BestHTTP.WebSocket.WebSocketResponse,ushort,string>), factory.System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string);
		dict.Add(typeof(Spine.Unity.UpdateBonesDelegate), factory.Spine_Unity_UpdateBonesDelegate);
		dict.Add(typeof(Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate), factory.Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate);
		dict.Add(typeof(Spine.Unity.MeshGeneratorDelegate), factory.Spine_Unity_MeshGeneratorDelegate);
		dict.Add(typeof(Spine.Unity.SkeletonRenderer.InstructionDelegate), factory.Spine_Unity_SkeletonRenderer_InstructionDelegate);
		dict.Add(typeof(Spine.AnimationState.TrackEntryDelegate), factory.Spine_AnimationState_TrackEntryDelegate);
		dict.Add(typeof(Spine.AnimationState.TrackEntryEventDelegate), factory.Spine_AnimationState_TrackEntryEventDelegate);
		dict.Add(typeof(System.Func<string,System.Type,UnityEngine.Object>), factory.System_Func_string_System_Type_UnityEngine_Object);
		dict.Add(typeof(System.Func<libx.Versions>), factory.System_Func_libx_Versions);
		dict.Add(typeof(System.Action<libx.AssetRequest>), factory.System_Action_libx_AssetRequest);

		DelegateTraits<System.Action>.Init(factory.System_Action);
		DelegateTraits<UnityEngine.Events.UnityAction>.Init(factory.UnityEngine_Events_UnityAction);
		DelegateTraits<System.Predicate<int>>.Init(factory.System_Predicate_int);
		DelegateTraits<System.Action<int>>.Init(factory.System_Action_int);
		DelegateTraits<System.Comparison<int>>.Init(factory.System_Comparison_int);
		DelegateTraits<System.Func<int,int>>.Init(factory.System_Func_int_int);
		DelegateTraits<System.Func<UnityEngine.LogType,object,bool>>.Init(factory.System_Func_UnityEngine_LogType_object_bool);
		DelegateTraits<DG.Tweening.Core.DOGetter<float>>.Init(factory.DG_Tweening_Core_DOGetter_float);
		DelegateTraits<DG.Tweening.Core.DOSetter<float>>.Init(factory.DG_Tweening_Core_DOSetter_float);
		DelegateTraits<DG.Tweening.Core.DOGetter<double>>.Init(factory.DG_Tweening_Core_DOGetter_double);
		DelegateTraits<DG.Tweening.Core.DOSetter<double>>.Init(factory.DG_Tweening_Core_DOSetter_double);
		DelegateTraits<DG.Tweening.Core.DOGetter<int>>.Init(factory.DG_Tweening_Core_DOGetter_int);
		DelegateTraits<DG.Tweening.Core.DOSetter<int>>.Init(factory.DG_Tweening_Core_DOSetter_int);
		DelegateTraits<DG.Tweening.Core.DOGetter<uint>>.Init(factory.DG_Tweening_Core_DOGetter_uint);
		DelegateTraits<DG.Tweening.Core.DOSetter<uint>>.Init(factory.DG_Tweening_Core_DOSetter_uint);
		DelegateTraits<DG.Tweening.Core.DOGetter<long>>.Init(factory.DG_Tweening_Core_DOGetter_long);
		DelegateTraits<DG.Tweening.Core.DOSetter<long>>.Init(factory.DG_Tweening_Core_DOSetter_long);
		DelegateTraits<DG.Tweening.Core.DOGetter<ulong>>.Init(factory.DG_Tweening_Core_DOGetter_ulong);
		DelegateTraits<DG.Tweening.Core.DOSetter<ulong>>.Init(factory.DG_Tweening_Core_DOSetter_ulong);
		DelegateTraits<DG.Tweening.Core.DOGetter<string>>.Init(factory.DG_Tweening_Core_DOGetter_string);
		DelegateTraits<DG.Tweening.Core.DOSetter<string>>.Init(factory.DG_Tweening_Core_DOSetter_string);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Color);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Color);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		DelegateTraits<DG.Tweening.TweenCallback>.Init(factory.DG_Tweening_TweenCallback);
		DelegateTraits<DG.Tweening.TweenCallback<int>>.Init(factory.DG_Tweening_TweenCallback_int);
		DelegateTraits<UnityEngine.Camera.CameraCallback>.Init(factory.UnityEngine_Camera_CameraCallback);
		DelegateTraits<DG.Tweening.TweenCallback<float>>.Init(factory.DG_Tweening_TweenCallback_float);
		DelegateTraits<DG.Tweening.EaseFunction>.Init(factory.DG_Tweening_EaseFunction);
		DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.UnityEngine_Application_LowMemoryCallback);
		DelegateTraits<UnityEngine.Application.LogCallback>.Init(factory.UnityEngine_Application_LogCallback);
		DelegateTraits<System.Action<bool>>.Init(factory.System_Action_bool);
		DelegateTraits<System.Action<string>>.Init(factory.System_Action_string);
		DelegateTraits<System.Func<bool>>.Init(factory.System_Func_bool);
		DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.System_Action_UnityEngine_AsyncOperation);
		DelegateTraits<FairyGUI.EventCallback1>.Init(factory.FairyGUI_EventCallback1);
		DelegateTraits<FairyGUI.EventCallback0>.Init(factory.FairyGUI_EventCallback0);
		DelegateTraits<FairyGUI.ListItemRenderer>.Init(factory.FairyGUI_ListItemRenderer);
		DelegateTraits<FairyGUI.ListItemProvider>.Init(factory.FairyGUI_ListItemProvider);
		DelegateTraits<FairyGUI.PlayCompleteCallback>.Init(factory.FairyGUI_PlayCompleteCallback);
		DelegateTraits<FairyGUI.TransitionHook>.Init(factory.FairyGUI_TransitionHook);
		DelegateTraits<FairyGUI.UIPackage.LoadResource>.Init(factory.FairyGUI_UIPackage_LoadResource);
		DelegateTraits<FairyGUI.UIPackage.LoadResourceAsync>.Init(factory.FairyGUI_UIPackage_LoadResourceAsync);
		DelegateTraits<FairyGUI.UIPackage.CreateObjectCallback>.Init(factory.FairyGUI_UIPackage_CreateObjectCallback);
		DelegateTraits<FairyGUI.GObjectPool.InitCallbackDelegate>.Init(factory.FairyGUI_GObjectPool_InitCallbackDelegate);
		DelegateTraits<FairyGUI.TimerCallback>.Init(factory.FairyGUI_TimerCallback);
		DelegateTraits<FairyGUI.GTweenCallback>.Init(factory.FairyGUI_GTweenCallback);
		DelegateTraits<FairyGUI.GTweenCallback1>.Init(factory.FairyGUI_GTweenCallback1);
		DelegateTraits<FairyGUI.UIObjectFactory.GComponentCreator>.Init(factory.FairyGUI_UIObjectFactory_GComponentCreator);
		DelegateTraits<FairyGUI.UIObjectFactory.GLoaderCreator>.Init(factory.FairyGUI_UIObjectFactory_GLoaderCreator);
		DelegateTraits<System.Action<FairyGUI.UpdateContext>>.Init(factory.System_Action_FairyGUI_UpdateContext);
		DelegateTraits<System.Action<UnityEngine.Texture>>.Init(factory.System_Action_UnityEngine_Texture);
		DelegateTraits<FairyGUI.UIConfig.SoundLoader>.Init(factory.FairyGUI_UIConfig_SoundLoader);
		DelegateTraits<BestHTTP.OnUploadProgressDelegate>.Init(factory.BestHTTP_OnUploadProgressDelegate);
		DelegateTraits<BestHTTP.OnStreamingDataDelegate>.Init(factory.BestHTTP_OnStreamingDataDelegate);
		DelegateTraits<System.Action<BestHTTP.HTTPRequest,BestHTTP.HTTPResponse>>.Init(factory.System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse);
		DelegateTraits<BestHTTP.OnDownloadProgressDelegate>.Init(factory.BestHTTP_OnDownloadProgressDelegate);
		DelegateTraits<BestHTTP.OnRequestFinishedDelegate>.Init(factory.BestHTTP_OnRequestFinishedDelegate);
		DelegateTraits<System.Func<BestHTTP.HTTPRequest,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,bool>>.Init(factory.System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool);
		DelegateTraits<BestHTTP.OnBeforeRedirectionDelegate>.Init(factory.BestHTTP_OnBeforeRedirectionDelegate);
		DelegateTraits<BestHTTP.OnBeforeHeaderSendDelegate>.Init(factory.BestHTTP_OnBeforeHeaderSendDelegate);
		DelegateTraits<BestHTTP.OnHeaderEnumerationDelegate>.Init(factory.BestHTTP_OnHeaderEnumerationDelegate);
		DelegateTraits<BestHTTP.WebSocket.OnWebSocketOpenDelegate>.Init(factory.BestHTTP_WebSocket_OnWebSocketOpenDelegate);
		DelegateTraits<BestHTTP.WebSocket.OnWebSocketMessageDelegate>.Init(factory.BestHTTP_WebSocket_OnWebSocketMessageDelegate);
		DelegateTraits<BestHTTP.WebSocket.OnWebSocketBinaryDelegate>.Init(factory.BestHTTP_WebSocket_OnWebSocketBinaryDelegate);
		DelegateTraits<BestHTTP.WebSocket.OnWebSocketClosedDelegate>.Init(factory.BestHTTP_WebSocket_OnWebSocketClosedDelegate);
		DelegateTraits<BestHTTP.WebSocket.OnWebSocketErrorDelegate>.Init(factory.BestHTTP_WebSocket_OnWebSocketErrorDelegate);
		DelegateTraits<BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate>.Init(factory.BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate);
		DelegateTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,string>>.Init(factory.System_Action_BestHTTP_WebSocket_WebSocketResponse_string);
		DelegateTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,byte[]>>.Init(factory.System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes);
		DelegateTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,BestHTTP.WebSocket.Frames.WebSocketFrameReader>>.Init(factory.System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader);
		DelegateTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,ushort,string>>.Init(factory.System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string);
		DelegateTraits<Spine.Unity.UpdateBonesDelegate>.Init(factory.Spine_Unity_UpdateBonesDelegate);
		DelegateTraits<Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate>.Init(factory.Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate);
		DelegateTraits<Spine.Unity.MeshGeneratorDelegate>.Init(factory.Spine_Unity_MeshGeneratorDelegate);
		DelegateTraits<Spine.Unity.SkeletonRenderer.InstructionDelegate>.Init(factory.Spine_Unity_SkeletonRenderer_InstructionDelegate);
		DelegateTraits<Spine.AnimationState.TrackEntryDelegate>.Init(factory.Spine_AnimationState_TrackEntryDelegate);
		DelegateTraits<Spine.AnimationState.TrackEntryEventDelegate>.Init(factory.Spine_AnimationState_TrackEntryEventDelegate);
		DelegateTraits<System.Func<string,System.Type,UnityEngine.Object>>.Init(factory.System_Func_string_System_Type_UnityEngine_Object);
		DelegateTraits<System.Func<libx.Versions>>.Init(factory.System_Func_libx_Versions);
		DelegateTraits<System.Action<libx.AssetRequest>>.Init(factory.System_Action_libx_AssetRequest);

		TypeTraits<System.Action>.Init(factory.Check_System_Action);
		TypeTraits<UnityEngine.Events.UnityAction>.Init(factory.Check_UnityEngine_Events_UnityAction);
		TypeTraits<System.Predicate<int>>.Init(factory.Check_System_Predicate_int);
		TypeTraits<System.Action<int>>.Init(factory.Check_System_Action_int);
		TypeTraits<System.Comparison<int>>.Init(factory.Check_System_Comparison_int);
		TypeTraits<System.Func<int,int>>.Init(factory.Check_System_Func_int_int);
		TypeTraits<System.Func<UnityEngine.LogType,object,bool>>.Init(factory.Check_System_Func_UnityEngine_LogType_object_bool);
		TypeTraits<DG.Tweening.Core.DOGetter<float>>.Init(factory.Check_DG_Tweening_Core_DOGetter_float);
		TypeTraits<DG.Tweening.Core.DOSetter<float>>.Init(factory.Check_DG_Tweening_Core_DOSetter_float);
		TypeTraits<DG.Tweening.Core.DOGetter<double>>.Init(factory.Check_DG_Tweening_Core_DOGetter_double);
		TypeTraits<DG.Tweening.Core.DOSetter<double>>.Init(factory.Check_DG_Tweening_Core_DOSetter_double);
		TypeTraits<DG.Tweening.Core.DOGetter<int>>.Init(factory.Check_DG_Tweening_Core_DOGetter_int);
		TypeTraits<DG.Tweening.Core.DOSetter<int>>.Init(factory.Check_DG_Tweening_Core_DOSetter_int);
		TypeTraits<DG.Tweening.Core.DOGetter<uint>>.Init(factory.Check_DG_Tweening_Core_DOGetter_uint);
		TypeTraits<DG.Tweening.Core.DOSetter<uint>>.Init(factory.Check_DG_Tweening_Core_DOSetter_uint);
		TypeTraits<DG.Tweening.Core.DOGetter<long>>.Init(factory.Check_DG_Tweening_Core_DOGetter_long);
		TypeTraits<DG.Tweening.Core.DOSetter<long>>.Init(factory.Check_DG_Tweening_Core_DOSetter_long);
		TypeTraits<DG.Tweening.Core.DOGetter<ulong>>.Init(factory.Check_DG_Tweening_Core_DOGetter_ulong);
		TypeTraits<DG.Tweening.Core.DOSetter<ulong>>.Init(factory.Check_DG_Tweening_Core_DOSetter_ulong);
		TypeTraits<DG.Tweening.Core.DOGetter<string>>.Init(factory.Check_DG_Tweening_Core_DOGetter_string);
		TypeTraits<DG.Tweening.Core.DOSetter<string>>.Init(factory.Check_DG_Tweening_Core_DOSetter_string);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Color);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Color);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		TypeTraits<DG.Tweening.TweenCallback>.Init(factory.Check_DG_Tweening_TweenCallback);
		TypeTraits<DG.Tweening.TweenCallback<int>>.Init(factory.Check_DG_Tweening_TweenCallback_int);
		TypeTraits<UnityEngine.Camera.CameraCallback>.Init(factory.Check_UnityEngine_Camera_CameraCallback);
		TypeTraits<DG.Tweening.TweenCallback<float>>.Init(factory.Check_DG_Tweening_TweenCallback_float);
		TypeTraits<DG.Tweening.EaseFunction>.Init(factory.Check_DG_Tweening_EaseFunction);
		TypeTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.Check_UnityEngine_Application_AdvertisingIdentifierCallback);
		TypeTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.Check_UnityEngine_Application_LowMemoryCallback);
		TypeTraits<UnityEngine.Application.LogCallback>.Init(factory.Check_UnityEngine_Application_LogCallback);
		TypeTraits<System.Action<bool>>.Init(factory.Check_System_Action_bool);
		TypeTraits<System.Action<string>>.Init(factory.Check_System_Action_string);
		TypeTraits<System.Func<bool>>.Init(factory.Check_System_Func_bool);
		TypeTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMReaderCallback);
		TypeTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMSetPositionCallback);
		TypeTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.Check_System_Action_UnityEngine_AsyncOperation);
		TypeTraits<FairyGUI.EventCallback1>.Init(factory.Check_FairyGUI_EventCallback1);
		TypeTraits<FairyGUI.EventCallback0>.Init(factory.Check_FairyGUI_EventCallback0);
		TypeTraits<FairyGUI.ListItemRenderer>.Init(factory.Check_FairyGUI_ListItemRenderer);
		TypeTraits<FairyGUI.ListItemProvider>.Init(factory.Check_FairyGUI_ListItemProvider);
		TypeTraits<FairyGUI.PlayCompleteCallback>.Init(factory.Check_FairyGUI_PlayCompleteCallback);
		TypeTraits<FairyGUI.TransitionHook>.Init(factory.Check_FairyGUI_TransitionHook);
		TypeTraits<FairyGUI.UIPackage.LoadResource>.Init(factory.Check_FairyGUI_UIPackage_LoadResource);
		TypeTraits<FairyGUI.UIPackage.LoadResourceAsync>.Init(factory.Check_FairyGUI_UIPackage_LoadResourceAsync);
		TypeTraits<FairyGUI.UIPackage.CreateObjectCallback>.Init(factory.Check_FairyGUI_UIPackage_CreateObjectCallback);
		TypeTraits<FairyGUI.GObjectPool.InitCallbackDelegate>.Init(factory.Check_FairyGUI_GObjectPool_InitCallbackDelegate);
		TypeTraits<FairyGUI.TimerCallback>.Init(factory.Check_FairyGUI_TimerCallback);
		TypeTraits<FairyGUI.GTweenCallback>.Init(factory.Check_FairyGUI_GTweenCallback);
		TypeTraits<FairyGUI.GTweenCallback1>.Init(factory.Check_FairyGUI_GTweenCallback1);
		TypeTraits<FairyGUI.UIObjectFactory.GComponentCreator>.Init(factory.Check_FairyGUI_UIObjectFactory_GComponentCreator);
		TypeTraits<FairyGUI.UIObjectFactory.GLoaderCreator>.Init(factory.Check_FairyGUI_UIObjectFactory_GLoaderCreator);
		TypeTraits<System.Action<FairyGUI.UpdateContext>>.Init(factory.Check_System_Action_FairyGUI_UpdateContext);
		TypeTraits<System.Action<UnityEngine.Texture>>.Init(factory.Check_System_Action_UnityEngine_Texture);
		TypeTraits<FairyGUI.UIConfig.SoundLoader>.Init(factory.Check_FairyGUI_UIConfig_SoundLoader);
		TypeTraits<BestHTTP.OnUploadProgressDelegate>.Init(factory.Check_BestHTTP_OnUploadProgressDelegate);
		TypeTraits<BestHTTP.OnStreamingDataDelegate>.Init(factory.Check_BestHTTP_OnStreamingDataDelegate);
		TypeTraits<System.Action<BestHTTP.HTTPRequest,BestHTTP.HTTPResponse>>.Init(factory.Check_System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse);
		TypeTraits<BestHTTP.OnDownloadProgressDelegate>.Init(factory.Check_BestHTTP_OnDownloadProgressDelegate);
		TypeTraits<BestHTTP.OnRequestFinishedDelegate>.Init(factory.Check_BestHTTP_OnRequestFinishedDelegate);
		TypeTraits<System.Func<BestHTTP.HTTPRequest,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,bool>>.Init(factory.Check_System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool);
		TypeTraits<BestHTTP.OnBeforeRedirectionDelegate>.Init(factory.Check_BestHTTP_OnBeforeRedirectionDelegate);
		TypeTraits<BestHTTP.OnBeforeHeaderSendDelegate>.Init(factory.Check_BestHTTP_OnBeforeHeaderSendDelegate);
		TypeTraits<BestHTTP.OnHeaderEnumerationDelegate>.Init(factory.Check_BestHTTP_OnHeaderEnumerationDelegate);
		TypeTraits<BestHTTP.WebSocket.OnWebSocketOpenDelegate>.Init(factory.Check_BestHTTP_WebSocket_OnWebSocketOpenDelegate);
		TypeTraits<BestHTTP.WebSocket.OnWebSocketMessageDelegate>.Init(factory.Check_BestHTTP_WebSocket_OnWebSocketMessageDelegate);
		TypeTraits<BestHTTP.WebSocket.OnWebSocketBinaryDelegate>.Init(factory.Check_BestHTTP_WebSocket_OnWebSocketBinaryDelegate);
		TypeTraits<BestHTTP.WebSocket.OnWebSocketClosedDelegate>.Init(factory.Check_BestHTTP_WebSocket_OnWebSocketClosedDelegate);
		TypeTraits<BestHTTP.WebSocket.OnWebSocketErrorDelegate>.Init(factory.Check_BestHTTP_WebSocket_OnWebSocketErrorDelegate);
		TypeTraits<BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate>.Init(factory.Check_BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate);
		TypeTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,string>>.Init(factory.Check_System_Action_BestHTTP_WebSocket_WebSocketResponse_string);
		TypeTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,byte[]>>.Init(factory.Check_System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes);
		TypeTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,BestHTTP.WebSocket.Frames.WebSocketFrameReader>>.Init(factory.Check_System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader);
		TypeTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,ushort,string>>.Init(factory.Check_System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string);
		TypeTraits<Spine.Unity.UpdateBonesDelegate>.Init(factory.Check_Spine_Unity_UpdateBonesDelegate);
		TypeTraits<Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate>.Init(factory.Check_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate);
		TypeTraits<Spine.Unity.MeshGeneratorDelegate>.Init(factory.Check_Spine_Unity_MeshGeneratorDelegate);
		TypeTraits<Spine.Unity.SkeletonRenderer.InstructionDelegate>.Init(factory.Check_Spine_Unity_SkeletonRenderer_InstructionDelegate);
		TypeTraits<Spine.AnimationState.TrackEntryDelegate>.Init(factory.Check_Spine_AnimationState_TrackEntryDelegate);
		TypeTraits<Spine.AnimationState.TrackEntryEventDelegate>.Init(factory.Check_Spine_AnimationState_TrackEntryEventDelegate);
		TypeTraits<System.Func<string,System.Type,UnityEngine.Object>>.Init(factory.Check_System_Func_string_System_Type_UnityEngine_Object);
		TypeTraits<System.Func<libx.Versions>>.Init(factory.Check_System_Func_libx_Versions);
		TypeTraits<System.Action<libx.AssetRequest>>.Init(factory.Check_System_Action_libx_AssetRequest);

		StackTraits<System.Action>.Push = factory.Push_System_Action;
		StackTraits<UnityEngine.Events.UnityAction>.Push = factory.Push_UnityEngine_Events_UnityAction;
		StackTraits<System.Predicate<int>>.Push = factory.Push_System_Predicate_int;
		StackTraits<System.Action<int>>.Push = factory.Push_System_Action_int;
		StackTraits<System.Comparison<int>>.Push = factory.Push_System_Comparison_int;
		StackTraits<System.Func<int,int>>.Push = factory.Push_System_Func_int_int;
		StackTraits<System.Func<UnityEngine.LogType,object,bool>>.Push = factory.Push_System_Func_UnityEngine_LogType_object_bool;
		StackTraits<DG.Tweening.Core.DOGetter<float>>.Push = factory.Push_DG_Tweening_Core_DOGetter_float;
		StackTraits<DG.Tweening.Core.DOSetter<float>>.Push = factory.Push_DG_Tweening_Core_DOSetter_float;
		StackTraits<DG.Tweening.Core.DOGetter<double>>.Push = factory.Push_DG_Tweening_Core_DOGetter_double;
		StackTraits<DG.Tweening.Core.DOSetter<double>>.Push = factory.Push_DG_Tweening_Core_DOSetter_double;
		StackTraits<DG.Tweening.Core.DOGetter<int>>.Push = factory.Push_DG_Tweening_Core_DOGetter_int;
		StackTraits<DG.Tweening.Core.DOSetter<int>>.Push = factory.Push_DG_Tweening_Core_DOSetter_int;
		StackTraits<DG.Tweening.Core.DOGetter<uint>>.Push = factory.Push_DG_Tweening_Core_DOGetter_uint;
		StackTraits<DG.Tweening.Core.DOSetter<uint>>.Push = factory.Push_DG_Tweening_Core_DOSetter_uint;
		StackTraits<DG.Tweening.Core.DOGetter<long>>.Push = factory.Push_DG_Tweening_Core_DOGetter_long;
		StackTraits<DG.Tweening.Core.DOSetter<long>>.Push = factory.Push_DG_Tweening_Core_DOSetter_long;
		StackTraits<DG.Tweening.Core.DOGetter<ulong>>.Push = factory.Push_DG_Tweening_Core_DOGetter_ulong;
		StackTraits<DG.Tweening.Core.DOSetter<ulong>>.Push = factory.Push_DG_Tweening_Core_DOSetter_ulong;
		StackTraits<DG.Tweening.Core.DOGetter<string>>.Push = factory.Push_DG_Tweening_Core_DOGetter_string;
		StackTraits<DG.Tweening.Core.DOSetter<string>>.Push = factory.Push_DG_Tweening_Core_DOSetter_string;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector2;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector2;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector3;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector3;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector4;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector4;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Color;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Color;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Rect;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Rect;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset;
		StackTraits<DG.Tweening.TweenCallback>.Push = factory.Push_DG_Tweening_TweenCallback;
		StackTraits<DG.Tweening.TweenCallback<int>>.Push = factory.Push_DG_Tweening_TweenCallback_int;
		StackTraits<UnityEngine.Camera.CameraCallback>.Push = factory.Push_UnityEngine_Camera_CameraCallback;
		StackTraits<DG.Tweening.TweenCallback<float>>.Push = factory.Push_DG_Tweening_TweenCallback_float;
		StackTraits<DG.Tweening.EaseFunction>.Push = factory.Push_DG_Tweening_EaseFunction;
		StackTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Push = factory.Push_UnityEngine_Application_AdvertisingIdentifierCallback;
		StackTraits<UnityEngine.Application.LowMemoryCallback>.Push = factory.Push_UnityEngine_Application_LowMemoryCallback;
		StackTraits<UnityEngine.Application.LogCallback>.Push = factory.Push_UnityEngine_Application_LogCallback;
		StackTraits<System.Action<bool>>.Push = factory.Push_System_Action_bool;
		StackTraits<System.Action<string>>.Push = factory.Push_System_Action_string;
		StackTraits<System.Func<bool>>.Push = factory.Push_System_Func_bool;
		StackTraits<UnityEngine.AudioClip.PCMReaderCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMReaderCallback;
		StackTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMSetPositionCallback;
		StackTraits<System.Action<UnityEngine.AsyncOperation>>.Push = factory.Push_System_Action_UnityEngine_AsyncOperation;
		StackTraits<FairyGUI.EventCallback1>.Push = factory.Push_FairyGUI_EventCallback1;
		StackTraits<FairyGUI.EventCallback0>.Push = factory.Push_FairyGUI_EventCallback0;
		StackTraits<FairyGUI.ListItemRenderer>.Push = factory.Push_FairyGUI_ListItemRenderer;
		StackTraits<FairyGUI.ListItemProvider>.Push = factory.Push_FairyGUI_ListItemProvider;
		StackTraits<FairyGUI.PlayCompleteCallback>.Push = factory.Push_FairyGUI_PlayCompleteCallback;
		StackTraits<FairyGUI.TransitionHook>.Push = factory.Push_FairyGUI_TransitionHook;
		StackTraits<FairyGUI.UIPackage.LoadResource>.Push = factory.Push_FairyGUI_UIPackage_LoadResource;
		StackTraits<FairyGUI.UIPackage.LoadResourceAsync>.Push = factory.Push_FairyGUI_UIPackage_LoadResourceAsync;
		StackTraits<FairyGUI.UIPackage.CreateObjectCallback>.Push = factory.Push_FairyGUI_UIPackage_CreateObjectCallback;
		StackTraits<FairyGUI.GObjectPool.InitCallbackDelegate>.Push = factory.Push_FairyGUI_GObjectPool_InitCallbackDelegate;
		StackTraits<FairyGUI.TimerCallback>.Push = factory.Push_FairyGUI_TimerCallback;
		StackTraits<FairyGUI.GTweenCallback>.Push = factory.Push_FairyGUI_GTweenCallback;
		StackTraits<FairyGUI.GTweenCallback1>.Push = factory.Push_FairyGUI_GTweenCallback1;
		StackTraits<FairyGUI.UIObjectFactory.GComponentCreator>.Push = factory.Push_FairyGUI_UIObjectFactory_GComponentCreator;
		StackTraits<FairyGUI.UIObjectFactory.GLoaderCreator>.Push = factory.Push_FairyGUI_UIObjectFactory_GLoaderCreator;
		StackTraits<System.Action<FairyGUI.UpdateContext>>.Push = factory.Push_System_Action_FairyGUI_UpdateContext;
		StackTraits<System.Action<UnityEngine.Texture>>.Push = factory.Push_System_Action_UnityEngine_Texture;
		StackTraits<FairyGUI.UIConfig.SoundLoader>.Push = factory.Push_FairyGUI_UIConfig_SoundLoader;
		StackTraits<BestHTTP.OnUploadProgressDelegate>.Push = factory.Push_BestHTTP_OnUploadProgressDelegate;
		StackTraits<BestHTTP.OnStreamingDataDelegate>.Push = factory.Push_BestHTTP_OnStreamingDataDelegate;
		StackTraits<System.Action<BestHTTP.HTTPRequest,BestHTTP.HTTPResponse>>.Push = factory.Push_System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse;
		StackTraits<BestHTTP.OnDownloadProgressDelegate>.Push = factory.Push_BestHTTP_OnDownloadProgressDelegate;
		StackTraits<BestHTTP.OnRequestFinishedDelegate>.Push = factory.Push_BestHTTP_OnRequestFinishedDelegate;
		StackTraits<System.Func<BestHTTP.HTTPRequest,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,bool>>.Push = factory.Push_System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool;
		StackTraits<BestHTTP.OnBeforeRedirectionDelegate>.Push = factory.Push_BestHTTP_OnBeforeRedirectionDelegate;
		StackTraits<BestHTTP.OnBeforeHeaderSendDelegate>.Push = factory.Push_BestHTTP_OnBeforeHeaderSendDelegate;
		StackTraits<BestHTTP.OnHeaderEnumerationDelegate>.Push = factory.Push_BestHTTP_OnHeaderEnumerationDelegate;
		StackTraits<BestHTTP.WebSocket.OnWebSocketOpenDelegate>.Push = factory.Push_BestHTTP_WebSocket_OnWebSocketOpenDelegate;
		StackTraits<BestHTTP.WebSocket.OnWebSocketMessageDelegate>.Push = factory.Push_BestHTTP_WebSocket_OnWebSocketMessageDelegate;
		StackTraits<BestHTTP.WebSocket.OnWebSocketBinaryDelegate>.Push = factory.Push_BestHTTP_WebSocket_OnWebSocketBinaryDelegate;
		StackTraits<BestHTTP.WebSocket.OnWebSocketClosedDelegate>.Push = factory.Push_BestHTTP_WebSocket_OnWebSocketClosedDelegate;
		StackTraits<BestHTTP.WebSocket.OnWebSocketErrorDelegate>.Push = factory.Push_BestHTTP_WebSocket_OnWebSocketErrorDelegate;
		StackTraits<BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate>.Push = factory.Push_BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate;
		StackTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,string>>.Push = factory.Push_System_Action_BestHTTP_WebSocket_WebSocketResponse_string;
		StackTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,byte[]>>.Push = factory.Push_System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes;
		StackTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,BestHTTP.WebSocket.Frames.WebSocketFrameReader>>.Push = factory.Push_System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader;
		StackTraits<System.Action<BestHTTP.WebSocket.WebSocketResponse,ushort,string>>.Push = factory.Push_System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string;
		StackTraits<Spine.Unity.UpdateBonesDelegate>.Push = factory.Push_Spine_Unity_UpdateBonesDelegate;
		StackTraits<Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate>.Push = factory.Push_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate;
		StackTraits<Spine.Unity.MeshGeneratorDelegate>.Push = factory.Push_Spine_Unity_MeshGeneratorDelegate;
		StackTraits<Spine.Unity.SkeletonRenderer.InstructionDelegate>.Push = factory.Push_Spine_Unity_SkeletonRenderer_InstructionDelegate;
		StackTraits<Spine.AnimationState.TrackEntryDelegate>.Push = factory.Push_Spine_AnimationState_TrackEntryDelegate;
		StackTraits<Spine.AnimationState.TrackEntryEventDelegate>.Push = factory.Push_Spine_AnimationState_TrackEntryEventDelegate;
		StackTraits<System.Func<string,System.Type,UnityEngine.Object>>.Push = factory.Push_System_Func_string_System_Type_UnityEngine_Object;
		StackTraits<System.Func<libx.Versions>>.Push = factory.Push_System_Func_libx_Versions;
		StackTraits<System.Action<libx.AssetRequest>>.Push = factory.Push_System_Action_libx_AssetRequest;
	}
    
    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));            
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func);
            
            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }  
            else
            {
                Delegate d = Create(func, null, false);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func);
                return d;
            }       
        }

        return Create(null, null, false);        
    }
    
    public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func, self);

            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }
            else
            {
                Delegate d = Create(func, self, true);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func, self);
                return d;
            }
        }

        return Create(null, null, true);
    }
    
    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {
        LuaState state = func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld.func == func)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                break;
            }
        }

        return obj;
    }
    
    public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
    {
        LuaDelegate remove = dg.Target as LuaDelegate;

        if (remove == null)
        {
            obj = Delegate.Remove(obj, dg);
            return obj;
        }

        LuaState state = remove.func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();        

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld == remove)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                state.DelayDispose(ld.self);
                break;
            }
        }

        return obj;
    }

	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action), L, pos);
	}

	void Push_System_Action(IntPtr L, System.Action o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityEngine.Events.UnityAction o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<int>), L, pos);
	}

	void Push_System_Predicate_int(IntPtr L, System.Predicate<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int>), L, pos);
	}

	void Push_System_Action_int(IntPtr L, System.Action<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<int>), L, pos);
	}

	void Push_System_Comparison_int(IntPtr L, System.Comparison<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_int_int_Event : LuaDelegate
	{
		public System_Func_int_int_Event(LuaFunction func) : base(func) { }
		public System_Func_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<int,int> System_Func_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<int,int> fn = delegate(int param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func);
			System.Func<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func, self);
			System.Func<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<int,int>), L, pos);
	}

	void Push_System_Func_int_int(IntPtr L, System.Func<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_UnityEngine_LogType_object_bool_Event : LuaDelegate
	{
		public System_Func_UnityEngine_LogType_object_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_UnityEngine_LogType_object_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(UnityEngine.LogType param0, object param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(UnityEngine.LogType param0, object param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<UnityEngine.LogType,object,bool> System_Func_UnityEngine_LogType_object_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<UnityEngine.LogType,object,bool> fn = delegate(UnityEngine.LogType param0, object param1) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_UnityEngine_LogType_object_bool_Event target = new System_Func_UnityEngine_LogType_object_bool_Event(func);
			System.Func<UnityEngine.LogType,object,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_UnityEngine_LogType_object_bool_Event target = new System_Func_UnityEngine_LogType_object_bool_Event(func, self);
			System.Func<UnityEngine.LogType,object,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_UnityEngine_LogType_object_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<UnityEngine.LogType,object,bool>), L, pos);
	}

	void Push_System_Func_UnityEngine_LogType_object_bool(IntPtr L, System.Func<UnityEngine.LogType,object,bool> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_float_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_float_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public float Call()
		{
			func.BeginPCall();
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public float CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<float> DG_Tweening_Core_DOGetter_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<float> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_float_Event target = new DG_Tweening_Core_DOGetter_float_Event(func);
			DG.Tweening.Core.DOGetter<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_float_Event target = new DG_Tweening_Core_DOGetter_float_Event(func, self);
			DG.Tweening.Core.DOGetter<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<float>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_float(IntPtr L, DG.Tweening.Core.DOGetter<float> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_float_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_float_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<float> DG_Tweening_Core_DOSetter_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<float> fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_float_Event target = new DG_Tweening_Core_DOSetter_float_Event(func);
			DG.Tweening.Core.DOSetter<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_float_Event target = new DG_Tweening_Core_DOSetter_float_Event(func, self);
			DG.Tweening.Core.DOSetter<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<float>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_float(IntPtr L, DG.Tweening.Core.DOSetter<float> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_double_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_double_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_double_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public double Call()
		{
			func.BeginPCall();
			func.PCall();
			double ret = (double)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public double CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			double ret = (double)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<double> DG_Tweening_Core_DOGetter_double(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<double> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_double_Event target = new DG_Tweening_Core_DOGetter_double_Event(func);
			DG.Tweening.Core.DOGetter<double> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_double_Event target = new DG_Tweening_Core_DOGetter_double_Event(func, self);
			DG.Tweening.Core.DOGetter<double> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_double(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<double>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_double(IntPtr L, DG.Tweening.Core.DOGetter<double> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_double_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_double_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_double_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(double param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(double param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<double> DG_Tweening_Core_DOSetter_double(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<double> fn = delegate(double param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_double_Event target = new DG_Tweening_Core_DOSetter_double_Event(func);
			DG.Tweening.Core.DOSetter<double> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_double_Event target = new DG_Tweening_Core_DOSetter_double_Event(func, self);
			DG.Tweening.Core.DOSetter<double> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_double(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<double>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_double(IntPtr L, DG.Tweening.Core.DOSetter<double> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_int_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call()
		{
			func.BeginPCall();
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<int> DG_Tweening_Core_DOGetter_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<int> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_int_Event target = new DG_Tweening_Core_DOGetter_int_Event(func);
			DG.Tweening.Core.DOGetter<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_int_Event target = new DG_Tweening_Core_DOGetter_int_Event(func, self);
			DG.Tweening.Core.DOGetter<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<int>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_int(IntPtr L, DG.Tweening.Core.DOGetter<int> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_int_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<int> DG_Tweening_Core_DOSetter_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_int_Event target = new DG_Tweening_Core_DOSetter_int_Event(func);
			DG.Tweening.Core.DOSetter<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_int_Event target = new DG_Tweening_Core_DOSetter_int_Event(func, self);
			DG.Tweening.Core.DOSetter<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<int>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_int(IntPtr L, DG.Tweening.Core.DOSetter<int> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_uint_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_uint_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_uint_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public uint Call()
		{
			func.BeginPCall();
			func.PCall();
			uint ret = (uint)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public uint CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			uint ret = (uint)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<uint> DG_Tweening_Core_DOGetter_uint(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<uint> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_uint_Event target = new DG_Tweening_Core_DOGetter_uint_Event(func);
			DG.Tweening.Core.DOGetter<uint> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_uint_Event target = new DG_Tweening_Core_DOGetter_uint_Event(func, self);
			DG.Tweening.Core.DOGetter<uint> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_uint(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<uint>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_uint(IntPtr L, DG.Tweening.Core.DOGetter<uint> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_uint_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_uint_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_uint_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(uint param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(uint param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<uint> DG_Tweening_Core_DOSetter_uint(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<uint> fn = delegate(uint param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_uint_Event target = new DG_Tweening_Core_DOSetter_uint_Event(func);
			DG.Tweening.Core.DOSetter<uint> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_uint_Event target = new DG_Tweening_Core_DOSetter_uint_Event(func, self);
			DG.Tweening.Core.DOSetter<uint> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_uint(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<uint>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_uint(IntPtr L, DG.Tweening.Core.DOSetter<uint> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_long_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_long_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_long_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public long Call()
		{
			func.BeginPCall();
			func.PCall();
			long ret = func.CheckLong();
			func.EndPCall();
			return ret;
		}

		public long CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			long ret = func.CheckLong();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<long> DG_Tweening_Core_DOGetter_long(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<long> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_long_Event target = new DG_Tweening_Core_DOGetter_long_Event(func);
			DG.Tweening.Core.DOGetter<long> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_long_Event target = new DG_Tweening_Core_DOGetter_long_Event(func, self);
			DG.Tweening.Core.DOGetter<long> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_long(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<long>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_long(IntPtr L, DG.Tweening.Core.DOGetter<long> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_long_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_long_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_long_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(long param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(long param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<long> DG_Tweening_Core_DOSetter_long(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<long> fn = delegate(long param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_long_Event target = new DG_Tweening_Core_DOSetter_long_Event(func);
			DG.Tweening.Core.DOSetter<long> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_long_Event target = new DG_Tweening_Core_DOSetter_long_Event(func, self);
			DG.Tweening.Core.DOSetter<long> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_long(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<long>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_long(IntPtr L, DG.Tweening.Core.DOSetter<long> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_ulong_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_ulong_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_ulong_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public ulong Call()
		{
			func.BeginPCall();
			func.PCall();
			ulong ret = func.CheckULong();
			func.EndPCall();
			return ret;
		}

		public ulong CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			ulong ret = func.CheckULong();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<ulong> DG_Tweening_Core_DOGetter_ulong(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<ulong> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_ulong_Event target = new DG_Tweening_Core_DOGetter_ulong_Event(func);
			DG.Tweening.Core.DOGetter<ulong> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_ulong_Event target = new DG_Tweening_Core_DOGetter_ulong_Event(func, self);
			DG.Tweening.Core.DOGetter<ulong> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_ulong(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<ulong>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_ulong(IntPtr L, DG.Tweening.Core.DOGetter<ulong> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_ulong_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_ulong_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_ulong_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(ulong param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(ulong param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<ulong> DG_Tweening_Core_DOSetter_ulong(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<ulong> fn = delegate(ulong param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_ulong_Event target = new DG_Tweening_Core_DOSetter_ulong_Event(func);
			DG.Tweening.Core.DOSetter<ulong> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_ulong_Event target = new DG_Tweening_Core_DOSetter_ulong_Event(func, self);
			DG.Tweening.Core.DOSetter<ulong> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_ulong(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<ulong>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_ulong(IntPtr L, DG.Tweening.Core.DOSetter<ulong> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_string_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_string_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public string Call()
		{
			func.BeginPCall();
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}

		public string CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<string> DG_Tweening_Core_DOGetter_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<string> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_string_Event target = new DG_Tweening_Core_DOGetter_string_Event(func);
			DG.Tweening.Core.DOGetter<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_string_Event target = new DG_Tweening_Core_DOGetter_string_Event(func, self);
			DG.Tweening.Core.DOGetter<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<string>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_string(IntPtr L, DG.Tweening.Core.DOGetter<string> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_string_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_string_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<string> DG_Tweening_Core_DOSetter_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_string_Event target = new DG_Tweening_Core_DOSetter_string_Event(func);
			DG.Tweening.Core.DOSetter<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_string_Event target = new DG_Tweening_Core_DOSetter_string_Event(func, self);
			DG.Tweening.Core.DOSetter<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<string>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_string(IntPtr L, DG.Tweening.Core.DOSetter<string> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector2 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector2 ret = func.CheckVector2();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector2 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector2 ret = func.CheckVector2();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector2> DG_Tweening_Core_DOGetter_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> fn = delegate() { return default(UnityEngine.Vector2); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector2(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector2>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector2(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector2> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector2> DG_Tweening_Core_DOSetter_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> fn = delegate(UnityEngine.Vector2 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector2(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector2>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector2(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector2> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector3 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector3 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector3> DG_Tweening_Core_DOGetter_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> fn = delegate() { return default(UnityEngine.Vector3); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector3(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector3>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector3(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector3> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector3> DG_Tweening_Core_DOSetter_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> fn = delegate(UnityEngine.Vector3 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector3(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector3>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector3(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector3> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector4 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector4 ret = func.CheckVector4();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector4 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector4 ret = func.CheckVector4();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector4> DG_Tweening_Core_DOGetter_UnityEngine_Vector4(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> fn = delegate() { return default(UnityEngine.Vector4); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector4(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector4>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector4(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector4> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector4 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector4 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector4> DG_Tweening_Core_DOSetter_UnityEngine_Vector4(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> fn = delegate(UnityEngine.Vector4 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector4(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector4>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector4(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector4> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Quaternion Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Quaternion ret = func.CheckQuaternion();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Quaternion CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Quaternion ret = func.CheckQuaternion();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> fn = delegate() { return default(UnityEngine.Quaternion); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Quaternion param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Quaternion param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> fn = delegate(UnityEngine.Quaternion param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Color_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Color Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Color ret = func.CheckColor();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Color CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Color ret = func.CheckColor();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Color> DG_Tweening_Core_DOGetter_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Color> fn = delegate() { return default(UnityEngine.Color); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Color(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Color>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Color(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Color> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Color_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Color> DG_Tweening_Core_DOSetter_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Color> fn = delegate(UnityEngine.Color param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Color(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Color>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Color(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Color> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Rect Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Rect ret = (UnityEngine.Rect)func.CheckObject(typeof(UnityEngine.Rect));
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Rect CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Rect ret = (UnityEngine.Rect)func.CheckObject(typeof(UnityEngine.Rect));
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Rect> DG_Tweening_Core_DOGetter_UnityEngine_Rect(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> fn = delegate() { return default(UnityEngine.Rect); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Rect(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Rect>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Rect(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Rect> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Rect param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Rect param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Rect> DG_Tweening_Core_DOSetter_UnityEngine_Rect(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> fn = delegate(UnityEngine.Rect param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Rect(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Rect>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Rect(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Rect> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.RectOffset Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.RectOffset ret = (UnityEngine.RectOffset)func.CheckObject(typeof(UnityEngine.RectOffset));
			func.EndPCall();
			return ret;
		}

		public UnityEngine.RectOffset CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.RectOffset ret = (UnityEngine.RectOffset)func.CheckObject(typeof(UnityEngine.RectOffset));
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>), L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectOffset param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectOffset param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> fn = delegate(UnityEngine.RectOffset param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>), L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_TweenCallback_Event : LuaDelegate
	{
		public DG_Tweening_TweenCallback_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_TweenCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.TweenCallback DG_Tweening_TweenCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.TweenCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_TweenCallback_Event target = new DG_Tweening_TweenCallback_Event(func);
			DG.Tweening.TweenCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_TweenCallback_Event target = new DG_Tweening_TweenCallback_Event(func, self);
			DG.Tweening.TweenCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_TweenCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.TweenCallback), L, pos);
	}

	void Push_DG_Tweening_TweenCallback(IntPtr L, DG.Tweening.TweenCallback o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_TweenCallback_int_Event : LuaDelegate
	{
		public DG_Tweening_TweenCallback_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_TweenCallback_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.TweenCallback<int> DG_Tweening_TweenCallback_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.TweenCallback<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_TweenCallback_int_Event target = new DG_Tweening_TweenCallback_int_Event(func);
			DG.Tweening.TweenCallback<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_TweenCallback_int_Event target = new DG_Tweening_TweenCallback_int_Event(func, self);
			DG.Tweening.TweenCallback<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_TweenCallback_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.TweenCallback<int>), L, pos);
	}

	void Push_DG_Tweening_TweenCallback_int(IntPtr L, DG.Tweening.TweenCallback<int> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Camera.CameraCallback), L, pos);
	}

	void Push_UnityEngine_Camera_CameraCallback(IntPtr L, UnityEngine.Camera.CameraCallback o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_TweenCallback_float_Event : LuaDelegate
	{
		public DG_Tweening_TweenCallback_float_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_TweenCallback_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.TweenCallback<float> DG_Tweening_TweenCallback_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.TweenCallback<float> fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_TweenCallback_float_Event target = new DG_Tweening_TweenCallback_float_Event(func);
			DG.Tweening.TweenCallback<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_TweenCallback_float_Event target = new DG_Tweening_TweenCallback_float_Event(func, self);
			DG.Tweening.TweenCallback<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_TweenCallback_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.TweenCallback<float>), L, pos);
	}

	void Push_DG_Tweening_TweenCallback_float(IntPtr L, DG.Tweening.TweenCallback<float> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_EaseFunction_Event : LuaDelegate
	{
		public DG_Tweening_EaseFunction_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_EaseFunction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public float Call(float param0, float param1, float param2, float param3)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.Push(param3);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public float CallWithSelf(float param0, float param1, float param2, float param3)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.Push(param3);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.EaseFunction DG_Tweening_EaseFunction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.EaseFunction fn = delegate(float param0, float param1, float param2, float param3) { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_EaseFunction_Event target = new DG_Tweening_EaseFunction_Event(func);
			DG.Tweening.EaseFunction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_EaseFunction_Event target = new DG_Tweening_EaseFunction_Event(func, self);
			DG.Tweening.EaseFunction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_EaseFunction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(DG.Tweening.EaseFunction), L, pos);
	}

	void Push_DG_Tweening_EaseFunction(IntPtr L, DG.Tweening.EaseFunction o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), L, pos);
	}

	void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, UnityEngine.Application.AdvertisingIdentifierCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LowMemoryCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LowMemoryCallback UnityEngine_Application_LowMemoryCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LowMemoryCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func);
			UnityEngine.Application.LowMemoryCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func, self);
			UnityEngine.Application.LowMemoryCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LowMemoryCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LowMemoryCallback), L, pos);
	}

	void Push_UnityEngine_Application_LowMemoryCallback(IntPtr L, UnityEngine.Application.LowMemoryCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LogCallback), L, pos);
	}

	void Push_UnityEngine_Application_LogCallback(IntPtr L, UnityEngine.Application.LogCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_bool_Event : LuaDelegate
	{
		public System_Action_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<bool> System_Action_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func);
			System.Action<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func, self);
			System.Action<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<bool>), L, pos);
	}

	void Push_System_Action_bool(IntPtr L, System.Action<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_Event : LuaDelegate
	{
		public System_Action_string_Event(LuaFunction func) : base(func) { }
		public System_Action_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string> System_Action_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_Event target = new System_Action_string_Event(func);
			System.Action<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_Event target = new System_Action_string_Event(func, self);
			System.Action<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string>), L, pos);
	}

	void Push_System_Action_string(IntPtr L, System.Action<string> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_bool_Event : LuaDelegate
	{
		public System_Func_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call()
		{
			func.BeginPCall();
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<bool> System_Func_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<bool> fn = delegate() { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func);
			System.Func<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func, self);
			System.Func<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<bool>), L, pos);
	}

	void Push_System_Func_bool(IntPtr L, System.Func<bool> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMReaderCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, UnityEngine.AudioClip.PCMReaderCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, UnityEngine.AudioClip.PCMSetPositionCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_AsyncOperation_Event : LuaDelegate
	{
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.AsyncOperation> System_Action_UnityEngine_AsyncOperation(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.AsyncOperation> fn = delegate(UnityEngine.AsyncOperation param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func);
			System.Action<UnityEngine.AsyncOperation> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func, self);
			System.Action<UnityEngine.AsyncOperation> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_AsyncOperation(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.AsyncOperation>), L, pos);
	}

	void Push_System_Action_UnityEngine_AsyncOperation(IntPtr L, System.Action<UnityEngine.AsyncOperation> o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_EventCallback1_Event : LuaDelegate
	{
		public FairyGUI_EventCallback1_Event(LuaFunction func) : base(func) { }
		public FairyGUI_EventCallback1_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.EventContext param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.EventContext param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.EventCallback1 FairyGUI_EventCallback1(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.EventCallback1 fn = delegate(FairyGUI.EventContext param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_EventCallback1_Event target = new FairyGUI_EventCallback1_Event(func);
			FairyGUI.EventCallback1 d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_EventCallback1_Event target = new FairyGUI_EventCallback1_Event(func, self);
			FairyGUI.EventCallback1 d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_EventCallback1(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.EventCallback1), L, pos);
	}

	void Push_FairyGUI_EventCallback1(IntPtr L, FairyGUI.EventCallback1 o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_EventCallback0_Event : LuaDelegate
	{
		public FairyGUI_EventCallback0_Event(LuaFunction func) : base(func) { }
		public FairyGUI_EventCallback0_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.EventCallback0 FairyGUI_EventCallback0(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.EventCallback0 fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_EventCallback0_Event target = new FairyGUI_EventCallback0_Event(func);
			FairyGUI.EventCallback0 d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_EventCallback0_Event target = new FairyGUI_EventCallback0_Event(func, self);
			FairyGUI.EventCallback0 d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_EventCallback0(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.EventCallback0), L, pos);
	}

	void Push_FairyGUI_EventCallback0(IntPtr L, FairyGUI.EventCallback0 o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_ListItemRenderer_Event : LuaDelegate
	{
		public FairyGUI_ListItemRenderer_Event(LuaFunction func) : base(func) { }
		public FairyGUI_ListItemRenderer_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0, FairyGUI.GObject param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0, FairyGUI.GObject param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.ListItemRenderer FairyGUI_ListItemRenderer(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.ListItemRenderer fn = delegate(int param0, FairyGUI.GObject param1) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_ListItemRenderer_Event target = new FairyGUI_ListItemRenderer_Event(func);
			FairyGUI.ListItemRenderer d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_ListItemRenderer_Event target = new FairyGUI_ListItemRenderer_Event(func, self);
			FairyGUI.ListItemRenderer d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_ListItemRenderer(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.ListItemRenderer), L, pos);
	}

	void Push_FairyGUI_ListItemRenderer(IntPtr L, FairyGUI.ListItemRenderer o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_ListItemProvider_Event : LuaDelegate
	{
		public FairyGUI_ListItemProvider_Event(LuaFunction func) : base(func) { }
		public FairyGUI_ListItemProvider_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public string Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}

		public string CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.ListItemProvider FairyGUI_ListItemProvider(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.ListItemProvider fn = delegate(int param0) { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_ListItemProvider_Event target = new FairyGUI_ListItemProvider_Event(func);
			FairyGUI.ListItemProvider d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_ListItemProvider_Event target = new FairyGUI_ListItemProvider_Event(func, self);
			FairyGUI.ListItemProvider d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_ListItemProvider(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.ListItemProvider), L, pos);
	}

	void Push_FairyGUI_ListItemProvider(IntPtr L, FairyGUI.ListItemProvider o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_PlayCompleteCallback_Event : LuaDelegate
	{
		public FairyGUI_PlayCompleteCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_PlayCompleteCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.PlayCompleteCallback FairyGUI_PlayCompleteCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.PlayCompleteCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_PlayCompleteCallback_Event target = new FairyGUI_PlayCompleteCallback_Event(func);
			FairyGUI.PlayCompleteCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_PlayCompleteCallback_Event target = new FairyGUI_PlayCompleteCallback_Event(func, self);
			FairyGUI.PlayCompleteCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_PlayCompleteCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.PlayCompleteCallback), L, pos);
	}

	void Push_FairyGUI_PlayCompleteCallback(IntPtr L, FairyGUI.PlayCompleteCallback o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_TransitionHook_Event : LuaDelegate
	{
		public FairyGUI_TransitionHook_Event(LuaFunction func) : base(func) { }
		public FairyGUI_TransitionHook_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.TransitionHook FairyGUI_TransitionHook(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.TransitionHook fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_TransitionHook_Event target = new FairyGUI_TransitionHook_Event(func);
			FairyGUI.TransitionHook d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_TransitionHook_Event target = new FairyGUI_TransitionHook_Event(func, self);
			FairyGUI.TransitionHook d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_TransitionHook(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.TransitionHook), L, pos);
	}

	void Push_FairyGUI_TransitionHook(IntPtr L, FairyGUI.TransitionHook o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIPackage_LoadResource_Event : LuaDelegate
	{
		public FairyGUI_UIPackage_LoadResource_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIPackage_LoadResource_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public object Call(string param0, string param1, System.Type param2, out FairyGUI.DestroyMethod param3)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			object ret = func.CheckVariant();
			param3 = (FairyGUI.DestroyMethod)func.CheckObject(typeof(FairyGUI.DestroyMethod));
			func.EndPCall();
			return ret;
		}

		public object CallWithSelf(string param0, string param1, System.Type param2, out FairyGUI.DestroyMethod param3)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			object ret = func.CheckVariant();
			param3 = (FairyGUI.DestroyMethod)func.CheckObject(typeof(FairyGUI.DestroyMethod));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.UIPackage.LoadResource FairyGUI_UIPackage_LoadResource(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIPackage.LoadResource fn = delegate(string param0, string param1, System.Type param2, out FairyGUI.DestroyMethod param3) 
			{
				param3 = default(FairyGUI.DestroyMethod);
			return null;			};

			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIPackage_LoadResource_Event target = new FairyGUI_UIPackage_LoadResource_Event(func);
			FairyGUI.UIPackage.LoadResource d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIPackage_LoadResource_Event target = new FairyGUI_UIPackage_LoadResource_Event(func, self);
			FairyGUI.UIPackage.LoadResource d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIPackage_LoadResource(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIPackage.LoadResource), L, pos);
	}

	void Push_FairyGUI_UIPackage_LoadResource(IntPtr L, FairyGUI.UIPackage.LoadResource o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIPackage_LoadResourceAsync_Event : LuaDelegate
	{
		public FairyGUI_UIPackage_LoadResourceAsync_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIPackage_LoadResourceAsync_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, System.Type param2, FairyGUI.PackageItem param3)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PushObject(param3);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, System.Type param2, FairyGUI.PackageItem param3)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PushObject(param3);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.UIPackage.LoadResourceAsync FairyGUI_UIPackage_LoadResourceAsync(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIPackage.LoadResourceAsync fn = delegate(string param0, string param1, System.Type param2, FairyGUI.PackageItem param3) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIPackage_LoadResourceAsync_Event target = new FairyGUI_UIPackage_LoadResourceAsync_Event(func);
			FairyGUI.UIPackage.LoadResourceAsync d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIPackage_LoadResourceAsync_Event target = new FairyGUI_UIPackage_LoadResourceAsync_Event(func, self);
			FairyGUI.UIPackage.LoadResourceAsync d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIPackage_LoadResourceAsync(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIPackage.LoadResourceAsync), L, pos);
	}

	void Push_FairyGUI_UIPackage_LoadResourceAsync(IntPtr L, FairyGUI.UIPackage.LoadResourceAsync o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIPackage_CreateObjectCallback_Event : LuaDelegate
	{
		public FairyGUI_UIPackage_CreateObjectCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIPackage_CreateObjectCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.UIPackage.CreateObjectCallback FairyGUI_UIPackage_CreateObjectCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIPackage.CreateObjectCallback fn = delegate(FairyGUI.GObject param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIPackage_CreateObjectCallback_Event target = new FairyGUI_UIPackage_CreateObjectCallback_Event(func);
			FairyGUI.UIPackage.CreateObjectCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIPackage_CreateObjectCallback_Event target = new FairyGUI_UIPackage_CreateObjectCallback_Event(func, self);
			FairyGUI.UIPackage.CreateObjectCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIPackage_CreateObjectCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIPackage.CreateObjectCallback), L, pos);
	}

	void Push_FairyGUI_UIPackage_CreateObjectCallback(IntPtr L, FairyGUI.UIPackage.CreateObjectCallback o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_GObjectPool_InitCallbackDelegate_Event : LuaDelegate
	{
		public FairyGUI_GObjectPool_InitCallbackDelegate_Event(LuaFunction func) : base(func) { }
		public FairyGUI_GObjectPool_InitCallbackDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.GObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.GObjectPool.InitCallbackDelegate FairyGUI_GObjectPool_InitCallbackDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.GObjectPool.InitCallbackDelegate fn = delegate(FairyGUI.GObject param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_GObjectPool_InitCallbackDelegate_Event target = new FairyGUI_GObjectPool_InitCallbackDelegate_Event(func);
			FairyGUI.GObjectPool.InitCallbackDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_GObjectPool_InitCallbackDelegate_Event target = new FairyGUI_GObjectPool_InitCallbackDelegate_Event(func, self);
			FairyGUI.GObjectPool.InitCallbackDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_GObjectPool_InitCallbackDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.GObjectPool.InitCallbackDelegate), L, pos);
	}

	void Push_FairyGUI_GObjectPool_InitCallbackDelegate(IntPtr L, FairyGUI.GObjectPool.InitCallbackDelegate o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_TimerCallback_Event : LuaDelegate
	{
		public FairyGUI_TimerCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_TimerCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(object param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(object param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.TimerCallback FairyGUI_TimerCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.TimerCallback fn = delegate(object param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_TimerCallback_Event target = new FairyGUI_TimerCallback_Event(func);
			FairyGUI.TimerCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_TimerCallback_Event target = new FairyGUI_TimerCallback_Event(func, self);
			FairyGUI.TimerCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_TimerCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.TimerCallback), L, pos);
	}

	void Push_FairyGUI_TimerCallback(IntPtr L, FairyGUI.TimerCallback o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_GTweenCallback_Event : LuaDelegate
	{
		public FairyGUI_GTweenCallback_Event(LuaFunction func) : base(func) { }
		public FairyGUI_GTweenCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.GTweenCallback FairyGUI_GTweenCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.GTweenCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_GTweenCallback_Event target = new FairyGUI_GTweenCallback_Event(func);
			FairyGUI.GTweenCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_GTweenCallback_Event target = new FairyGUI_GTweenCallback_Event(func, self);
			FairyGUI.GTweenCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_GTweenCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.GTweenCallback), L, pos);
	}

	void Push_FairyGUI_GTweenCallback(IntPtr L, FairyGUI.GTweenCallback o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_GTweenCallback1_Event : LuaDelegate
	{
		public FairyGUI_GTweenCallback1_Event(LuaFunction func) : base(func) { }
		public FairyGUI_GTweenCallback1_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.GTweener param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.GTweener param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public FairyGUI.GTweenCallback1 FairyGUI_GTweenCallback1(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.GTweenCallback1 fn = delegate(FairyGUI.GTweener param0) { };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_GTweenCallback1_Event target = new FairyGUI_GTweenCallback1_Event(func);
			FairyGUI.GTweenCallback1 d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_GTweenCallback1_Event target = new FairyGUI_GTweenCallback1_Event(func, self);
			FairyGUI.GTweenCallback1 d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_GTweenCallback1(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.GTweenCallback1), L, pos);
	}

	void Push_FairyGUI_GTweenCallback1(IntPtr L, FairyGUI.GTweenCallback1 o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIObjectFactory_GComponentCreator_Event : LuaDelegate
	{
		public FairyGUI_UIObjectFactory_GComponentCreator_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIObjectFactory_GComponentCreator_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public FairyGUI.GComponent Call()
		{
			func.BeginPCall();
			func.PCall();
			FairyGUI.GComponent ret = (FairyGUI.GComponent)func.CheckObject(typeof(FairyGUI.GComponent));
			func.EndPCall();
			return ret;
		}

		public FairyGUI.GComponent CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			FairyGUI.GComponent ret = (FairyGUI.GComponent)func.CheckObject(typeof(FairyGUI.GComponent));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.UIObjectFactory.GComponentCreator FairyGUI_UIObjectFactory_GComponentCreator(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIObjectFactory.GComponentCreator fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIObjectFactory_GComponentCreator_Event target = new FairyGUI_UIObjectFactory_GComponentCreator_Event(func);
			FairyGUI.UIObjectFactory.GComponentCreator d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIObjectFactory_GComponentCreator_Event target = new FairyGUI_UIObjectFactory_GComponentCreator_Event(func, self);
			FairyGUI.UIObjectFactory.GComponentCreator d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIObjectFactory_GComponentCreator(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIObjectFactory.GComponentCreator), L, pos);
	}

	void Push_FairyGUI_UIObjectFactory_GComponentCreator(IntPtr L, FairyGUI.UIObjectFactory.GComponentCreator o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIObjectFactory_GLoaderCreator_Event : LuaDelegate
	{
		public FairyGUI_UIObjectFactory_GLoaderCreator_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIObjectFactory_GLoaderCreator_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public FairyGUI.GLoader Call()
		{
			func.BeginPCall();
			func.PCall();
			FairyGUI.GLoader ret = (FairyGUI.GLoader)func.CheckObject(typeof(FairyGUI.GLoader));
			func.EndPCall();
			return ret;
		}

		public FairyGUI.GLoader CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			FairyGUI.GLoader ret = (FairyGUI.GLoader)func.CheckObject(typeof(FairyGUI.GLoader));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.UIObjectFactory.GLoaderCreator FairyGUI_UIObjectFactory_GLoaderCreator(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIObjectFactory.GLoaderCreator fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIObjectFactory_GLoaderCreator_Event target = new FairyGUI_UIObjectFactory_GLoaderCreator_Event(func);
			FairyGUI.UIObjectFactory.GLoaderCreator d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIObjectFactory_GLoaderCreator_Event target = new FairyGUI_UIObjectFactory_GLoaderCreator_Event(func, self);
			FairyGUI.UIObjectFactory.GLoaderCreator d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIObjectFactory_GLoaderCreator(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIObjectFactory.GLoaderCreator), L, pos);
	}

	void Push_FairyGUI_UIObjectFactory_GLoaderCreator(IntPtr L, FairyGUI.UIObjectFactory.GLoaderCreator o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_FairyGUI_UpdateContext_Event : LuaDelegate
	{
		public System_Action_FairyGUI_UpdateContext_Event(LuaFunction func) : base(func) { }
		public System_Action_FairyGUI_UpdateContext_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(FairyGUI.UpdateContext param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(FairyGUI.UpdateContext param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<FairyGUI.UpdateContext> System_Action_FairyGUI_UpdateContext(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<FairyGUI.UpdateContext> fn = delegate(FairyGUI.UpdateContext param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_FairyGUI_UpdateContext_Event target = new System_Action_FairyGUI_UpdateContext_Event(func);
			System.Action<FairyGUI.UpdateContext> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_FairyGUI_UpdateContext_Event target = new System_Action_FairyGUI_UpdateContext_Event(func, self);
			System.Action<FairyGUI.UpdateContext> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_FairyGUI_UpdateContext(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<FairyGUI.UpdateContext>), L, pos);
	}

	void Push_System_Action_FairyGUI_UpdateContext(IntPtr L, System.Action<FairyGUI.UpdateContext> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Texture_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Texture_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Texture_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Texture param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Texture param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Texture> System_Action_UnityEngine_Texture(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Texture> fn = delegate(UnityEngine.Texture param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Texture_Event target = new System_Action_UnityEngine_Texture_Event(func);
			System.Action<UnityEngine.Texture> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Texture_Event target = new System_Action_UnityEngine_Texture_Event(func, self);
			System.Action<UnityEngine.Texture> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Texture(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Texture>), L, pos);
	}

	void Push_System_Action_UnityEngine_Texture(IntPtr L, System.Action<UnityEngine.Texture> o)
	{
		ToLua.Push(L, o);
	}

	class FairyGUI_UIConfig_SoundLoader_Event : LuaDelegate
	{
		public FairyGUI_UIConfig_SoundLoader_Event(LuaFunction func) : base(func) { }
		public FairyGUI_UIConfig_SoundLoader_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public FairyGUI.NAudioClip Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			FairyGUI.NAudioClip ret = (FairyGUI.NAudioClip)func.CheckObject(typeof(FairyGUI.NAudioClip));
			func.EndPCall();
			return ret;
		}

		public FairyGUI.NAudioClip CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			FairyGUI.NAudioClip ret = (FairyGUI.NAudioClip)func.CheckObject(typeof(FairyGUI.NAudioClip));
			func.EndPCall();
			return ret;
		}
	}

	public FairyGUI.UIConfig.SoundLoader FairyGUI_UIConfig_SoundLoader(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			FairyGUI.UIConfig.SoundLoader fn = delegate(string param0) { return null; };
			return fn;
		}

		if(!flag)
		{
			FairyGUI_UIConfig_SoundLoader_Event target = new FairyGUI_UIConfig_SoundLoader_Event(func);
			FairyGUI.UIConfig.SoundLoader d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			FairyGUI_UIConfig_SoundLoader_Event target = new FairyGUI_UIConfig_SoundLoader_Event(func, self);
			FairyGUI.UIConfig.SoundLoader d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_FairyGUI_UIConfig_SoundLoader(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(FairyGUI.UIConfig.SoundLoader), L, pos);
	}

	void Push_FairyGUI_UIConfig_SoundLoader(IntPtr L, FairyGUI.UIConfig.SoundLoader o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_OnUploadProgressDelegate_Event : LuaDelegate
	{
		public BestHTTP_OnUploadProgressDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_OnUploadProgressDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.HTTPRequest param0, long param1, long param2)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.HTTPRequest param0, long param1, long param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public BestHTTP.OnUploadProgressDelegate BestHTTP_OnUploadProgressDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.OnUploadProgressDelegate fn = delegate(BestHTTP.HTTPRequest param0, long param1, long param2) { };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_OnUploadProgressDelegate_Event target = new BestHTTP_OnUploadProgressDelegate_Event(func);
			BestHTTP.OnUploadProgressDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_OnUploadProgressDelegate_Event target = new BestHTTP_OnUploadProgressDelegate_Event(func, self);
			BestHTTP.OnUploadProgressDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_OnUploadProgressDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.OnUploadProgressDelegate), L, pos);
	}

	void Push_BestHTTP_OnUploadProgressDelegate(IntPtr L, BestHTTP.OnUploadProgressDelegate o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_OnStreamingDataDelegate_Event : LuaDelegate
	{
		public BestHTTP_OnStreamingDataDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_OnStreamingDataDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1, byte[] param2, int param3)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PushObject(param1);
			func.Push(param2);
			func.Push(param3);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1, byte[] param2, int param3)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PushObject(param1);
			func.Push(param2);
			func.Push(param3);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public BestHTTP.OnStreamingDataDelegate BestHTTP_OnStreamingDataDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.OnStreamingDataDelegate fn = delegate(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1, byte[] param2, int param3) { return false; };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_OnStreamingDataDelegate_Event target = new BestHTTP_OnStreamingDataDelegate_Event(func);
			BestHTTP.OnStreamingDataDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_OnStreamingDataDelegate_Event target = new BestHTTP_OnStreamingDataDelegate_Event(func, self);
			BestHTTP.OnStreamingDataDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_OnStreamingDataDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.OnStreamingDataDelegate), L, pos);
	}

	void Push_BestHTTP_OnStreamingDataDelegate(IntPtr L, BestHTTP.OnStreamingDataDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse_Event : LuaDelegate
	{
		public System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse_Event(LuaFunction func) : base(func) { }
		public System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<BestHTTP.HTTPRequest,BestHTTP.HTTPResponse> System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<BestHTTP.HTTPRequest,BestHTTP.HTTPResponse> fn = delegate(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse_Event target = new System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse_Event(func);
			System.Action<BestHTTP.HTTPRequest,BestHTTP.HTTPResponse> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse_Event target = new System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse_Event(func, self);
			System.Action<BestHTTP.HTTPRequest,BestHTTP.HTTPResponse> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<BestHTTP.HTTPRequest,BestHTTP.HTTPResponse>), L, pos);
	}

	void Push_System_Action_BestHTTP_HTTPRequest_BestHTTP_HTTPResponse(IntPtr L, System.Action<BestHTTP.HTTPRequest,BestHTTP.HTTPResponse> o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_OnDownloadProgressDelegate_Event : LuaDelegate
	{
		public BestHTTP_OnDownloadProgressDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_OnDownloadProgressDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.HTTPRequest param0, long param1, long param2)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.HTTPRequest param0, long param1, long param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public BestHTTP.OnDownloadProgressDelegate BestHTTP_OnDownloadProgressDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.OnDownloadProgressDelegate fn = delegate(BestHTTP.HTTPRequest param0, long param1, long param2) { };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_OnDownloadProgressDelegate_Event target = new BestHTTP_OnDownloadProgressDelegate_Event(func);
			BestHTTP.OnDownloadProgressDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_OnDownloadProgressDelegate_Event target = new BestHTTP_OnDownloadProgressDelegate_Event(func, self);
			BestHTTP.OnDownloadProgressDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_OnDownloadProgressDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.OnDownloadProgressDelegate), L, pos);
	}

	void Push_BestHTTP_OnDownloadProgressDelegate(IntPtr L, BestHTTP.OnDownloadProgressDelegate o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_OnRequestFinishedDelegate_Event : LuaDelegate
	{
		public BestHTTP_OnRequestFinishedDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_OnRequestFinishedDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public BestHTTP.OnRequestFinishedDelegate BestHTTP_OnRequestFinishedDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.OnRequestFinishedDelegate fn = delegate(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1) { };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_OnRequestFinishedDelegate_Event target = new BestHTTP_OnRequestFinishedDelegate_Event(func);
			BestHTTP.OnRequestFinishedDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_OnRequestFinishedDelegate_Event target = new BestHTTP_OnRequestFinishedDelegate_Event(func, self);
			BestHTTP.OnRequestFinishedDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_OnRequestFinishedDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.OnRequestFinishedDelegate), L, pos);
	}

	void Push_BestHTTP_OnRequestFinishedDelegate(IntPtr L, BestHTTP.OnRequestFinishedDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool_Event : LuaDelegate
	{
		public System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(BestHTTP.HTTPRequest param0, System.Security.Cryptography.X509Certificates.X509Certificate param1, System.Security.Cryptography.X509Certificates.X509Chain param2)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PushObject(param2);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(BestHTTP.HTTPRequest param0, System.Security.Cryptography.X509Certificates.X509Certificate param1, System.Security.Cryptography.X509Certificates.X509Chain param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PushObject(param2);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<BestHTTP.HTTPRequest,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,bool> System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<BestHTTP.HTTPRequest,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,bool> fn = delegate(BestHTTP.HTTPRequest param0, System.Security.Cryptography.X509Certificates.X509Certificate param1, System.Security.Cryptography.X509Certificates.X509Chain param2) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool_Event target = new System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool_Event(func);
			System.Func<BestHTTP.HTTPRequest,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool_Event target = new System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool_Event(func, self);
			System.Func<BestHTTP.HTTPRequest,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<BestHTTP.HTTPRequest,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,bool>), L, pos);
	}

	void Push_System_Func_BestHTTP_HTTPRequest_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509Chain_bool(IntPtr L, System.Func<BestHTTP.HTTPRequest,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,bool> o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_OnBeforeRedirectionDelegate_Event : LuaDelegate
	{
		public BestHTTP_OnBeforeRedirectionDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_OnBeforeRedirectionDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1, System.Uri param2)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PushObject(param2);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1, System.Uri param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PushObject(param1);
			func.PushObject(param2);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public BestHTTP.OnBeforeRedirectionDelegate BestHTTP_OnBeforeRedirectionDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.OnBeforeRedirectionDelegate fn = delegate(BestHTTP.HTTPRequest param0, BestHTTP.HTTPResponse param1, System.Uri param2) { return false; };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_OnBeforeRedirectionDelegate_Event target = new BestHTTP_OnBeforeRedirectionDelegate_Event(func);
			BestHTTP.OnBeforeRedirectionDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_OnBeforeRedirectionDelegate_Event target = new BestHTTP_OnBeforeRedirectionDelegate_Event(func, self);
			BestHTTP.OnBeforeRedirectionDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_OnBeforeRedirectionDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.OnBeforeRedirectionDelegate), L, pos);
	}

	void Push_BestHTTP_OnBeforeRedirectionDelegate(IntPtr L, BestHTTP.OnBeforeRedirectionDelegate o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_OnBeforeHeaderSendDelegate_Event : LuaDelegate
	{
		public BestHTTP_OnBeforeHeaderSendDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_OnBeforeHeaderSendDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.HTTPRequest param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.HTTPRequest param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public BestHTTP.OnBeforeHeaderSendDelegate BestHTTP_OnBeforeHeaderSendDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.OnBeforeHeaderSendDelegate fn = delegate(BestHTTP.HTTPRequest param0) { };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_OnBeforeHeaderSendDelegate_Event target = new BestHTTP_OnBeforeHeaderSendDelegate_Event(func);
			BestHTTP.OnBeforeHeaderSendDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_OnBeforeHeaderSendDelegate_Event target = new BestHTTP_OnBeforeHeaderSendDelegate_Event(func, self);
			BestHTTP.OnBeforeHeaderSendDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_OnBeforeHeaderSendDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.OnBeforeHeaderSendDelegate), L, pos);
	}

	void Push_BestHTTP_OnBeforeHeaderSendDelegate(IntPtr L, BestHTTP.OnBeforeHeaderSendDelegate o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_OnHeaderEnumerationDelegate_Event : LuaDelegate
	{
		public BestHTTP_OnHeaderEnumerationDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_OnHeaderEnumerationDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, System.Collections.Generic.List<string> param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushSealed(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, System.Collections.Generic.List<string> param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushSealed(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public BestHTTP.OnHeaderEnumerationDelegate BestHTTP_OnHeaderEnumerationDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.OnHeaderEnumerationDelegate fn = delegate(string param0, System.Collections.Generic.List<string> param1) { };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_OnHeaderEnumerationDelegate_Event target = new BestHTTP_OnHeaderEnumerationDelegate_Event(func);
			BestHTTP.OnHeaderEnumerationDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_OnHeaderEnumerationDelegate_Event target = new BestHTTP_OnHeaderEnumerationDelegate_Event(func, self);
			BestHTTP.OnHeaderEnumerationDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_OnHeaderEnumerationDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.OnHeaderEnumerationDelegate), L, pos);
	}

	void Push_BestHTTP_OnHeaderEnumerationDelegate(IntPtr L, BestHTTP.OnHeaderEnumerationDelegate o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_WebSocket_OnWebSocketOpenDelegate_Event : LuaDelegate
	{
		public BestHTTP_WebSocket_OnWebSocketOpenDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_WebSocket_OnWebSocketOpenDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.WebSocket.WebSocket param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.WebSocket.WebSocket param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public BestHTTP.WebSocket.OnWebSocketOpenDelegate BestHTTP_WebSocket_OnWebSocketOpenDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.WebSocket.OnWebSocketOpenDelegate fn = delegate(BestHTTP.WebSocket.WebSocket param0) { };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_WebSocket_OnWebSocketOpenDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketOpenDelegate_Event(func);
			BestHTTP.WebSocket.OnWebSocketOpenDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_WebSocket_OnWebSocketOpenDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketOpenDelegate_Event(func, self);
			BestHTTP.WebSocket.OnWebSocketOpenDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_WebSocket_OnWebSocketOpenDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.WebSocket.OnWebSocketOpenDelegate), L, pos);
	}

	void Push_BestHTTP_WebSocket_OnWebSocketOpenDelegate(IntPtr L, BestHTTP.WebSocket.OnWebSocketOpenDelegate o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_WebSocket_OnWebSocketMessageDelegate_Event : LuaDelegate
	{
		public BestHTTP_WebSocket_OnWebSocketMessageDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_WebSocket_OnWebSocketMessageDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.WebSocket.WebSocket param0, string param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.WebSocket.WebSocket param0, string param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public BestHTTP.WebSocket.OnWebSocketMessageDelegate BestHTTP_WebSocket_OnWebSocketMessageDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.WebSocket.OnWebSocketMessageDelegate fn = delegate(BestHTTP.WebSocket.WebSocket param0, string param1) { };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_WebSocket_OnWebSocketMessageDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketMessageDelegate_Event(func);
			BestHTTP.WebSocket.OnWebSocketMessageDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_WebSocket_OnWebSocketMessageDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketMessageDelegate_Event(func, self);
			BestHTTP.WebSocket.OnWebSocketMessageDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_WebSocket_OnWebSocketMessageDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.WebSocket.OnWebSocketMessageDelegate), L, pos);
	}

	void Push_BestHTTP_WebSocket_OnWebSocketMessageDelegate(IntPtr L, BestHTTP.WebSocket.OnWebSocketMessageDelegate o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_WebSocket_OnWebSocketBinaryDelegate_Event : LuaDelegate
	{
		public BestHTTP_WebSocket_OnWebSocketBinaryDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_WebSocket_OnWebSocketBinaryDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.WebSocket.WebSocket param0, byte[] param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.WebSocket.WebSocket param0, byte[] param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public BestHTTP.WebSocket.OnWebSocketBinaryDelegate BestHTTP_WebSocket_OnWebSocketBinaryDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.WebSocket.OnWebSocketBinaryDelegate fn = delegate(BestHTTP.WebSocket.WebSocket param0, byte[] param1) { };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_WebSocket_OnWebSocketBinaryDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketBinaryDelegate_Event(func);
			BestHTTP.WebSocket.OnWebSocketBinaryDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_WebSocket_OnWebSocketBinaryDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketBinaryDelegate_Event(func, self);
			BestHTTP.WebSocket.OnWebSocketBinaryDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_WebSocket_OnWebSocketBinaryDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.WebSocket.OnWebSocketBinaryDelegate), L, pos);
	}

	void Push_BestHTTP_WebSocket_OnWebSocketBinaryDelegate(IntPtr L, BestHTTP.WebSocket.OnWebSocketBinaryDelegate o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_WebSocket_OnWebSocketClosedDelegate_Event : LuaDelegate
	{
		public BestHTTP_WebSocket_OnWebSocketClosedDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_WebSocket_OnWebSocketClosedDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.WebSocket.WebSocket param0, ushort param1, string param2)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.WebSocket.WebSocket param0, ushort param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public BestHTTP.WebSocket.OnWebSocketClosedDelegate BestHTTP_WebSocket_OnWebSocketClosedDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.WebSocket.OnWebSocketClosedDelegate fn = delegate(BestHTTP.WebSocket.WebSocket param0, ushort param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_WebSocket_OnWebSocketClosedDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketClosedDelegate_Event(func);
			BestHTTP.WebSocket.OnWebSocketClosedDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_WebSocket_OnWebSocketClosedDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketClosedDelegate_Event(func, self);
			BestHTTP.WebSocket.OnWebSocketClosedDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_WebSocket_OnWebSocketClosedDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.WebSocket.OnWebSocketClosedDelegate), L, pos);
	}

	void Push_BestHTTP_WebSocket_OnWebSocketClosedDelegate(IntPtr L, BestHTTP.WebSocket.OnWebSocketClosedDelegate o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_WebSocket_OnWebSocketErrorDelegate_Event : LuaDelegate
	{
		public BestHTTP_WebSocket_OnWebSocketErrorDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_WebSocket_OnWebSocketErrorDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.WebSocket.WebSocket param0, string param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.WebSocket.WebSocket param0, string param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public BestHTTP.WebSocket.OnWebSocketErrorDelegate BestHTTP_WebSocket_OnWebSocketErrorDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.WebSocket.OnWebSocketErrorDelegate fn = delegate(BestHTTP.WebSocket.WebSocket param0, string param1) { };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_WebSocket_OnWebSocketErrorDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketErrorDelegate_Event(func);
			BestHTTP.WebSocket.OnWebSocketErrorDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_WebSocket_OnWebSocketErrorDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketErrorDelegate_Event(func, self);
			BestHTTP.WebSocket.OnWebSocketErrorDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_WebSocket_OnWebSocketErrorDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.WebSocket.OnWebSocketErrorDelegate), L, pos);
	}

	void Push_BestHTTP_WebSocket_OnWebSocketErrorDelegate(IntPtr L, BestHTTP.WebSocket.OnWebSocketErrorDelegate o)
	{
		ToLua.Push(L, o);
	}

	class BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate_Event : LuaDelegate
	{
		public BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate_Event(LuaFunction func) : base(func) { }
		public BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.WebSocket.WebSocket param0, BestHTTP.WebSocket.Frames.WebSocketFrameReader param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.WebSocket.WebSocket param0, BestHTTP.WebSocket.Frames.WebSocketFrameReader param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate fn = delegate(BestHTTP.WebSocket.WebSocket param0, BestHTTP.WebSocket.Frames.WebSocketFrameReader param1) { };
			return fn;
		}

		if(!flag)
		{
			BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate_Event(func);
			BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate_Event target = new BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate_Event(func, self);
			BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate), L, pos);
	}

	void Push_BestHTTP_WebSocket_OnWebSocketIncompleteFrameDelegate(IntPtr L, BestHTTP.WebSocket.OnWebSocketIncompleteFrameDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_BestHTTP_WebSocket_WebSocketResponse_string_Event : LuaDelegate
	{
		public System_Action_BestHTTP_WebSocket_WebSocketResponse_string_Event(LuaFunction func) : base(func) { }
		public System_Action_BestHTTP_WebSocket_WebSocketResponse_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.WebSocket.WebSocketResponse param0, string param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.WebSocket.WebSocketResponse param0, string param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<BestHTTP.WebSocket.WebSocketResponse,string> System_Action_BestHTTP_WebSocket_WebSocketResponse_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<BestHTTP.WebSocket.WebSocketResponse,string> fn = delegate(BestHTTP.WebSocket.WebSocketResponse param0, string param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_BestHTTP_WebSocket_WebSocketResponse_string_Event target = new System_Action_BestHTTP_WebSocket_WebSocketResponse_string_Event(func);
			System.Action<BestHTTP.WebSocket.WebSocketResponse,string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_BestHTTP_WebSocket_WebSocketResponse_string_Event target = new System_Action_BestHTTP_WebSocket_WebSocketResponse_string_Event(func, self);
			System.Action<BestHTTP.WebSocket.WebSocketResponse,string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_BestHTTP_WebSocket_WebSocketResponse_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<BestHTTP.WebSocket.WebSocketResponse,string>), L, pos);
	}

	void Push_System_Action_BestHTTP_WebSocket_WebSocketResponse_string(IntPtr L, System.Action<BestHTTP.WebSocket.WebSocketResponse,string> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes_Event : LuaDelegate
	{
		public System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes_Event(LuaFunction func) : base(func) { }
		public System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.WebSocket.WebSocketResponse param0, byte[] param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.WebSocket.WebSocketResponse param0, byte[] param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<BestHTTP.WebSocket.WebSocketResponse,byte[]> System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<BestHTTP.WebSocket.WebSocketResponse,byte[]> fn = delegate(BestHTTP.WebSocket.WebSocketResponse param0, byte[] param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes_Event target = new System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes_Event(func);
			System.Action<BestHTTP.WebSocket.WebSocketResponse,byte[]> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes_Event target = new System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes_Event(func, self);
			System.Action<BestHTTP.WebSocket.WebSocketResponse,byte[]> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<BestHTTP.WebSocket.WebSocketResponse,byte[]>), L, pos);
	}

	void Push_System_Action_BestHTTP_WebSocket_WebSocketResponse_bytes(IntPtr L, System.Action<BestHTTP.WebSocket.WebSocketResponse,byte[]> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader_Event : LuaDelegate
	{
		public System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader_Event(LuaFunction func) : base(func) { }
		public System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.WebSocket.WebSocketResponse param0, BestHTTP.WebSocket.Frames.WebSocketFrameReader param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.WebSocket.WebSocketResponse param0, BestHTTP.WebSocket.Frames.WebSocketFrameReader param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<BestHTTP.WebSocket.WebSocketResponse,BestHTTP.WebSocket.Frames.WebSocketFrameReader> System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<BestHTTP.WebSocket.WebSocketResponse,BestHTTP.WebSocket.Frames.WebSocketFrameReader> fn = delegate(BestHTTP.WebSocket.WebSocketResponse param0, BestHTTP.WebSocket.Frames.WebSocketFrameReader param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader_Event target = new System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader_Event(func);
			System.Action<BestHTTP.WebSocket.WebSocketResponse,BestHTTP.WebSocket.Frames.WebSocketFrameReader> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader_Event target = new System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader_Event(func, self);
			System.Action<BestHTTP.WebSocket.WebSocketResponse,BestHTTP.WebSocket.Frames.WebSocketFrameReader> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<BestHTTP.WebSocket.WebSocketResponse,BestHTTP.WebSocket.Frames.WebSocketFrameReader>), L, pos);
	}

	void Push_System_Action_BestHTTP_WebSocket_WebSocketResponse_BestHTTP_WebSocket_Frames_WebSocketFrameReader(IntPtr L, System.Action<BestHTTP.WebSocket.WebSocketResponse,BestHTTP.WebSocket.Frames.WebSocketFrameReader> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string_Event : LuaDelegate
	{
		public System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string_Event(LuaFunction func) : base(func) { }
		public System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(BestHTTP.WebSocket.WebSocketResponse param0, ushort param1, string param2)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(BestHTTP.WebSocket.WebSocketResponse param0, ushort param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<BestHTTP.WebSocket.WebSocketResponse,ushort,string> System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<BestHTTP.WebSocket.WebSocketResponse,ushort,string> fn = delegate(BestHTTP.WebSocket.WebSocketResponse param0, ushort param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string_Event target = new System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string_Event(func);
			System.Action<BestHTTP.WebSocket.WebSocketResponse,ushort,string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string_Event target = new System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string_Event(func, self);
			System.Action<BestHTTP.WebSocket.WebSocketResponse,ushort,string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<BestHTTP.WebSocket.WebSocketResponse,ushort,string>), L, pos);
	}

	void Push_System_Action_BestHTTP_WebSocket_WebSocketResponse_ushort_string(IntPtr L, System.Action<BestHTTP.WebSocket.WebSocketResponse,ushort,string> o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_UpdateBonesDelegate_Event : LuaDelegate
	{
		public Spine_Unity_UpdateBonesDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_UpdateBonesDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.ISkeletonAnimation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.ISkeletonAnimation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.UpdateBonesDelegate Spine_Unity_UpdateBonesDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.UpdateBonesDelegate fn = delegate(Spine.Unity.ISkeletonAnimation param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_UpdateBonesDelegate_Event target = new Spine_Unity_UpdateBonesDelegate_Event(func);
			Spine.Unity.UpdateBonesDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_UpdateBonesDelegate_Event target = new Spine_Unity_UpdateBonesDelegate_Event(func, self);
			Spine.Unity.UpdateBonesDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_UpdateBonesDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.UpdateBonesDelegate), L, pos);
	}

	void Push_Spine_Unity_UpdateBonesDelegate(IntPtr L, Spine.Unity.UpdateBonesDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event : LuaDelegate
	{
		public Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.SkeletonRenderer param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.SkeletonRenderer param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate fn = delegate(Spine.Unity.SkeletonRenderer param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event target = new Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(func);
			Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event target = new Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate_Event(func, self);
			Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate), L, pos);
	}

	void Push_Spine_Unity_SkeletonRenderer_SkeletonRendererDelegate(IntPtr L, Spine.Unity.SkeletonRenderer.SkeletonRendererDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_MeshGeneratorDelegate_Event : LuaDelegate
	{
		public Spine_Unity_MeshGeneratorDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_MeshGeneratorDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.MeshGeneratorBuffers param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.MeshGeneratorBuffers param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.MeshGeneratorDelegate Spine_Unity_MeshGeneratorDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.MeshGeneratorDelegate fn = delegate(Spine.Unity.MeshGeneratorBuffers param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_MeshGeneratorDelegate_Event target = new Spine_Unity_MeshGeneratorDelegate_Event(func);
			Spine.Unity.MeshGeneratorDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_MeshGeneratorDelegate_Event target = new Spine_Unity_MeshGeneratorDelegate_Event(func, self);
			Spine.Unity.MeshGeneratorDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_MeshGeneratorDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.MeshGeneratorDelegate), L, pos);
	}

	void Push_Spine_Unity_MeshGeneratorDelegate(IntPtr L, Spine.Unity.MeshGeneratorDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_Unity_SkeletonRenderer_InstructionDelegate_Event : LuaDelegate
	{
		public Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.Unity.SkeletonRendererInstruction param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.Unity.SkeletonRendererInstruction param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.Unity.SkeletonRenderer.InstructionDelegate Spine_Unity_SkeletonRenderer_InstructionDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.Unity.SkeletonRenderer.InstructionDelegate fn = delegate(Spine.Unity.SkeletonRendererInstruction param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_Unity_SkeletonRenderer_InstructionDelegate_Event target = new Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(func);
			Spine.Unity.SkeletonRenderer.InstructionDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_Unity_SkeletonRenderer_InstructionDelegate_Event target = new Spine_Unity_SkeletonRenderer_InstructionDelegate_Event(func, self);
			Spine.Unity.SkeletonRenderer.InstructionDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_Unity_SkeletonRenderer_InstructionDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.Unity.SkeletonRenderer.InstructionDelegate), L, pos);
	}

	void Push_Spine_Unity_SkeletonRenderer_InstructionDelegate(IntPtr L, Spine.Unity.SkeletonRenderer.InstructionDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_AnimationState_TrackEntryDelegate_Event : LuaDelegate
	{
		public Spine_AnimationState_TrackEntryDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_AnimationState_TrackEntryDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.TrackEntry param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.TrackEntry param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.AnimationState.TrackEntryDelegate Spine_AnimationState_TrackEntryDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.AnimationState.TrackEntryDelegate fn = delegate(Spine.TrackEntry param0) { };
			return fn;
		}

		if(!flag)
		{
			Spine_AnimationState_TrackEntryDelegate_Event target = new Spine_AnimationState_TrackEntryDelegate_Event(func);
			Spine.AnimationState.TrackEntryDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_AnimationState_TrackEntryDelegate_Event target = new Spine_AnimationState_TrackEntryDelegate_Event(func, self);
			Spine.AnimationState.TrackEntryDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_AnimationState_TrackEntryDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.AnimationState.TrackEntryDelegate), L, pos);
	}

	void Push_Spine_AnimationState_TrackEntryDelegate(IntPtr L, Spine.AnimationState.TrackEntryDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Spine_AnimationState_TrackEntryEventDelegate_Event : LuaDelegate
	{
		public Spine_AnimationState_TrackEntryEventDelegate_Event(LuaFunction func) : base(func) { }
		public Spine_AnimationState_TrackEntryEventDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Spine.TrackEntry param0, Spine.Event param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Spine.TrackEntry param0, Spine.Event param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Spine.AnimationState.TrackEntryEventDelegate Spine_AnimationState_TrackEntryEventDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Spine.AnimationState.TrackEntryEventDelegate fn = delegate(Spine.TrackEntry param0, Spine.Event param1) { };
			return fn;
		}

		if(!flag)
		{
			Spine_AnimationState_TrackEntryEventDelegate_Event target = new Spine_AnimationState_TrackEntryEventDelegate_Event(func);
			Spine.AnimationState.TrackEntryEventDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Spine_AnimationState_TrackEntryEventDelegate_Event target = new Spine_AnimationState_TrackEntryEventDelegate_Event(func, self);
			Spine.AnimationState.TrackEntryEventDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Spine_AnimationState_TrackEntryEventDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Spine.AnimationState.TrackEntryEventDelegate), L, pos);
	}

	void Push_Spine_AnimationState_TrackEntryEventDelegate(IntPtr L, Spine.AnimationState.TrackEntryEventDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_string_System_Type_UnityEngine_Object_Event : LuaDelegate
	{
		public System_Func_string_System_Type_UnityEngine_Object_Event(LuaFunction func) : base(func) { }
		public System_Func_string_System_Type_UnityEngine_Object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Object Call(string param0, System.Type param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			UnityEngine.Object ret = (UnityEngine.Object)func.CheckObject(typeof(UnityEngine.Object));
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Object CallWithSelf(string param0, System.Type param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			UnityEngine.Object ret = (UnityEngine.Object)func.CheckObject(typeof(UnityEngine.Object));
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<string,System.Type,UnityEngine.Object> System_Func_string_System_Type_UnityEngine_Object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<string,System.Type,UnityEngine.Object> fn = delegate(string param0, System.Type param1) { return null; };
			return fn;
		}

		if(!flag)
		{
			System_Func_string_System_Type_UnityEngine_Object_Event target = new System_Func_string_System_Type_UnityEngine_Object_Event(func);
			System.Func<string,System.Type,UnityEngine.Object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_string_System_Type_UnityEngine_Object_Event target = new System_Func_string_System_Type_UnityEngine_Object_Event(func, self);
			System.Func<string,System.Type,UnityEngine.Object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_string_System_Type_UnityEngine_Object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<string,System.Type,UnityEngine.Object>), L, pos);
	}

	void Push_System_Func_string_System_Type_UnityEngine_Object(IntPtr L, System.Func<string,System.Type,UnityEngine.Object> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_libx_Versions_Event : LuaDelegate
	{
		public System_Func_libx_Versions_Event(LuaFunction func) : base(func) { }
		public System_Func_libx_Versions_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public libx.Versions Call()
		{
			func.BeginPCall();
			func.PCall();
			libx.Versions ret = (libx.Versions)func.CheckObject(typeof(libx.Versions));
			func.EndPCall();
			return ret;
		}

		public libx.Versions CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			libx.Versions ret = (libx.Versions)func.CheckObject(typeof(libx.Versions));
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<libx.Versions> System_Func_libx_Versions(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<libx.Versions> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			System_Func_libx_Versions_Event target = new System_Func_libx_Versions_Event(func);
			System.Func<libx.Versions> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_libx_Versions_Event target = new System_Func_libx_Versions_Event(func, self);
			System.Func<libx.Versions> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_libx_Versions(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<libx.Versions>), L, pos);
	}

	void Push_System_Func_libx_Versions(IntPtr L, System.Func<libx.Versions> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_libx_AssetRequest_Event : LuaDelegate
	{
		public System_Action_libx_AssetRequest_Event(LuaFunction func) : base(func) { }
		public System_Action_libx_AssetRequest_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(libx.AssetRequest param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(libx.AssetRequest param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<libx.AssetRequest> System_Action_libx_AssetRequest(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<libx.AssetRequest> fn = delegate(libx.AssetRequest param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_libx_AssetRequest_Event target = new System_Action_libx_AssetRequest_Event(func);
			System.Action<libx.AssetRequest> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_libx_AssetRequest_Event target = new System_Action_libx_AssetRequest_Event(func, self);
			System.Action<libx.AssetRequest> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_libx_AssetRequest(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<libx.AssetRequest>), L, pos);
	}

	void Push_System_Action_libx_AssetRequest(IntPtr L, System.Action<libx.AssetRequest> o)
	{
		ToLua.Push(L, o);
	}

}

