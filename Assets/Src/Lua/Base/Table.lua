---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by abner.
--- DateTime: 2020-05-19 10:05
---

-- 数组中首次出现value值的位置
table.indexOf = function(tb, value)
    if tb == nil or #tb <= 0 then
        return -1
    end

    local ret = -1
    for k, v in pairs(tb) do
        if v == value then
            ret = k
            break
        end
    end
    return ret;
end

table.exist = function(tb, value)
    return table.indexOf(tb, value) > -1
end

-- 数组切片
table.splice = function(tb, spos, count)
    spos = spos or 0
    count = count or 1

    if tb == nil or #tb <= spos then
        return tb
    end

    if #tb - (spos + count - 1) < 0 then
        Log.debug("out or index")
        return tb
    end

    local ret = {}
    local splice = {}
    for i, v in ipairs(tb) do
        if i >= spos and i <= spos + count then
            --table.insert(splice, v)
        else
            table.insert(ret, v)
        end
    end
    tb = nil
    return ret
end

function table.ink(tbl, key)
    if tbl == nil then
        return false
    end
    for k, v in pairs(tbl) do
        if k == key then
            return true
        end
    end
    return false
end

-- 查看某值是否为表tbl中的value值
table.inv = function(tbl, value)
    if tbl == nil then
        return false
    end

    for k, v in pairs(tbl) do
        if v == value then
            return true
        end
    end
    return false
end

table.nums = function(t)
    local count = 0
    for k, v in pairs(t) do
        count = count + 1
    end
    return count
end

-- @param t 要检查的表格(t表示是table)
-- @param table 返回指定表格的所有键（key）,它是一个键集合的表格
--]]
table.keys = function(t)
    local keys = {}
    for k, _ in pairs(t) do
        keys[#keys + 1] = k
    end
    return keys
end

table.removeItem = function(t, item)
    for i, v in pairs(t) do
        if v == item then
            table.remove(t, i)
            break
        end
    end
end

table.check = function(t, item)
    for i, v in pairs(t) do
        if v == item then
            return true
        end
    end
    return false
end

table.index = function(t, item)
    for i, v in ipairs(t) do
        if v == item then
            return i
        end
    end
    return 0
end

-- 获取table的实际长度
table.len = function(tb)
    local length = 0;
    for k, v in pairs(tb) do
        length = length + 1
    end
    return length;
end

-- 查看table是否为纯数组
table.isArrayTable = function(t)
    if type(t) ~= "table" then
        return false
    end
    local n = #t
    for i, v in pairs(t) do
        if type(i) ~= "number" then
            return false
        end
        if i > n then
            return false
        end
    end
    return true
end

table.copy = function(t)
    local t1 = {}
    for k,v in pairs(t) do
        t1[k] = v
    end
    return t1
end

-- 连接两个tab
table.concatTable = function(stb, tb)
    if table.isArrayTable(stb) then
        local t = table.copy(stb)
        if tb then
            for _, v in ipairs(tb) do
                table.insert(t, v)
            end
            return t;
        else
            return table.copy(stb)
        end
    else
        if table.isArrayTable(tb) then
            return table.copy(tb)
        else
            return nil
        end
    end
end

-- 倒序
table.reverseTable = function (tab)
    local tmp = {}
    for i = 1, #tab do
        local key = #tab
        tmp[i] = table.remove(tab)
    end

    return tmp
end



is_empty = function(v)
    if v == cjson_null then
        return true
    end
    return v == nil or v == ""
end


